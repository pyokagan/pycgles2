#ifndef _PYCGLES2_CTXMETHODS_H_
#define _PYCGLES2_CTXMETHODS_H_
#include <pycgles2.h>
#include "GL_ES_VERSION_2_0.h"
#include "GL_ES_VERSION_3_0.h"
#include "GL_ES_VERSION_3_1.h"
#include "GL_KHR_blend_equation_advanced.h"
#include "GL_KHR_blend_equation_advanced_coherent.h"
#include "GL_KHR_context_flush_control.h"
#include "GL_KHR_debug.h"
#include "GL_KHR_robust_buffer_access_behavior.h"
#include "GL_KHR_robustness.h"
#include "GL_KHR_texture_compression_astc_hdr.h"
#include "GL_KHR_texture_compression_astc_ldr.h"
#include "GL_OES_EGL_image.h"
#include "GL_OES_EGL_image_external.h"
#include "GL_OES_compressed_ETC1_RGB8_sub_texture.h"
#include "GL_OES_compressed_ETC1_RGB8_texture.h"
#include "GL_OES_compressed_paletted_texture.h"
#include "GL_OES_depth24.h"
#include "GL_OES_depth32.h"
#include "GL_OES_depth_texture.h"
#include "GL_OES_element_index_uint.h"
#include "GL_OES_fbo_render_mipmap.h"
#include "GL_OES_fragment_precision_high.h"
#include "GL_OES_get_program_binary.h"
#include "GL_OES_mapbuffer.h"
#include "GL_OES_packed_depth_stencil.h"
#include "GL_OES_required_internalformat.h"
#include "GL_OES_rgb8_rgba8.h"
#include "GL_OES_sample_shading.h"
#include "GL_OES_sample_variables.h"
#include "GL_OES_shader_image_atomic.h"
#include "GL_OES_shader_multisample_interpolation.h"
#include "GL_OES_standard_derivatives.h"
#include "GL_OES_stencil1.h"
#include "GL_OES_stencil4.h"
#include "GL_OES_surfaceless_context.h"
#include "GL_OES_texture_3D.h"
#include "GL_OES_texture_compression_astc.h"
#include "GL_OES_texture_float.h"
#include "GL_OES_texture_float_linear.h"
#include "GL_OES_texture_half_float.h"
#include "GL_OES_texture_half_float_linear.h"
#include "GL_OES_texture_npot.h"
#include "GL_OES_texture_stencil8.h"
#include "GL_OES_texture_storage_multisample_2d_array.h"
#include "GL_OES_vertex_array_object.h"
#include "GL_OES_vertex_half_float.h"
#include "GL_OES_vertex_type_10_10_10_2.h"
#include "GL_AMD_compressed_3DC_texture.h"
#include "GL_AMD_compressed_ATC_texture.h"
#include "GL_AMD_performance_monitor.h"
#include "GL_AMD_program_binary_Z400.h"
#include "GL_ANDROID_extension_pack_es31a.h"
#include "GL_ANGLE_depth_texture.h"
#include "GL_ANGLE_framebuffer_blit.h"
#include "GL_ANGLE_framebuffer_multisample.h"
#include "GL_ANGLE_instanced_arrays.h"
#include "GL_ANGLE_pack_reverse_row_order.h"
#include "GL_ANGLE_program_binary.h"
#include "GL_ANGLE_texture_compression_dxt3.h"
#include "GL_ANGLE_texture_compression_dxt5.h"
#include "GL_ANGLE_texture_usage.h"
#include "GL_ANGLE_translated_shader_source.h"
#include "GL_APPLE_clip_distance.h"
#include "GL_APPLE_color_buffer_packed_float.h"
#include "GL_APPLE_copy_texture_levels.h"
#include "GL_APPLE_framebuffer_multisample.h"
#include "GL_APPLE_rgb_422.h"
#include "GL_APPLE_sync.h"
#include "GL_APPLE_texture_format_BGRA8888.h"
#include "GL_APPLE_texture_max_level.h"
#include "GL_APPLE_texture_packed_float.h"
#include "GL_ARM_mali_program_binary.h"
#include "GL_ARM_mali_shader_binary.h"
#include "GL_ARM_rgba8.h"
#include "GL_ARM_shader_framebuffer_fetch.h"
#include "GL_ARM_shader_framebuffer_fetch_depth_stencil.h"
#include "GL_DMP_program_binary.h"
#include "GL_DMP_shader_binary.h"
#include "GL_EXT_base_instance.h"
#include "GL_EXT_blend_minmax.h"
#include "GL_EXT_color_buffer_half_float.h"
#include "GL_EXT_copy_image.h"
#include "GL_EXT_debug_label.h"
#include "GL_EXT_debug_marker.h"
#include "GL_EXT_discard_framebuffer.h"
#include "GL_EXT_disjoint_timer_query.h"
#include "GL_EXT_draw_buffers.h"
#include "GL_EXT_draw_buffers_indexed.h"
#include "GL_EXT_draw_elements_base_vertex.h"
#include "GL_EXT_draw_instanced.h"
#include "GL_EXT_geometry_point_size.h"
#include "GL_EXT_geometry_shader.h"
#include "GL_EXT_gpu_shader5.h"
#include "GL_EXT_instanced_arrays.h"
#include "GL_EXT_map_buffer_range.h"
#include "GL_EXT_multi_draw_arrays.h"
#include "GL_EXT_multi_draw_indirect.h"
#include "GL_EXT_multisampled_render_to_texture.h"
#include "GL_EXT_multiview_draw_buffers.h"
#include "GL_EXT_occlusion_query_boolean.h"
#include "GL_EXT_primitive_bounding_box.h"
#include "GL_EXT_pvrtc_sRGB.h"
#include "GL_EXT_read_format_bgra.h"
#include "GL_EXT_render_snorm.h"
#include "GL_EXT_robustness.h"
#include "GL_EXT_sRGB.h"
#include "GL_EXT_sRGB_write_control.h"
#include "GL_EXT_separate_shader_objects.h"
#include "GL_EXT_shader_framebuffer_fetch.h"
#include "GL_EXT_shader_implicit_conversions.h"
#include "GL_EXT_shader_integer_mix.h"
#include "GL_EXT_shader_io_blocks.h"
#include "GL_EXT_shader_pixel_local_storage.h"
#include "GL_EXT_shader_texture_lod.h"
#include "GL_EXT_shadow_samplers.h"
#include "GL_EXT_tessellation_point_size.h"
#include "GL_EXT_tessellation_shader.h"
#include "GL_EXT_texture_border_clamp.h"
#include "GL_EXT_texture_buffer.h"
#include "GL_EXT_texture_compression_dxt1.h"
#include "GL_EXT_texture_compression_s3tc.h"
#include "GL_EXT_texture_cube_map_array.h"
#include "GL_EXT_texture_filter_anisotropic.h"
#include "GL_EXT_texture_format_BGRA8888.h"
#include "GL_EXT_texture_norm16.h"
#include "GL_EXT_texture_rg.h"
#include "GL_EXT_texture_sRGB_decode.h"
#include "GL_EXT_texture_storage.h"
#include "GL_EXT_texture_type_2_10_10_10_REV.h"
#include "GL_EXT_texture_view.h"
#include "GL_EXT_unpack_subimage.h"
#include "GL_FJ_shader_binary_GCCSO.h"
#include "GL_IMG_multisampled_render_to_texture.h"
#include "GL_IMG_program_binary.h"
#include "GL_IMG_read_format.h"
#include "GL_IMG_shader_binary.h"
#include "GL_IMG_texture_compression_pvrtc.h"
#include "GL_IMG_texture_compression_pvrtc2.h"
#include "GL_INTEL_performance_query.h"
#include "GL_NV_bindless_texture.h"
#include "GL_NV_blend_equation_advanced.h"
#include "GL_NV_blend_equation_advanced_coherent.h"
#include "GL_NV_conditional_render.h"
#include "GL_NV_copy_buffer.h"
#include "GL_NV_coverage_sample.h"
#include "GL_NV_depth_nonlinear.h"
#include "GL_NV_draw_buffers.h"
#include "GL_NV_draw_instanced.h"
#include "GL_NV_explicit_attrib_location.h"
#include "GL_NV_fbo_color_attachments.h"
#include "GL_NV_fence.h"
#include "GL_NV_framebuffer_blit.h"
#include "GL_NV_framebuffer_multisample.h"
#include "GL_NV_generate_mipmap_sRGB.h"
#include "GL_NV_image_formats.h"
#include "GL_NV_instanced_arrays.h"
#include "GL_NV_internalformat_sample_query.h"
#include "GL_NV_non_square_matrices.h"
#include "GL_NV_path_rendering.h"
#include "GL_NV_read_buffer.h"
#include "GL_NV_read_buffer_front.h"
#include "GL_NV_read_depth.h"
#include "GL_NV_read_depth_stencil.h"
#include "GL_NV_read_stencil.h"
#include "GL_NV_sRGB_formats.h"
#include "GL_NV_shader_noperspective_interpolation.h"
#include "GL_NV_shadow_samplers_array.h"
#include "GL_NV_shadow_samplers_cube.h"
#include "GL_NV_texture_border_clamp.h"
#include "GL_NV_texture_compression_s3tc_update.h"
#include "GL_NV_texture_npot_2D_mipmap.h"
#include "GL_NV_viewport_array.h"
#include "GL_QCOM_alpha_test.h"
#include "GL_QCOM_binning_control.h"
#include "GL_QCOM_driver_control.h"
#include "GL_QCOM_extended_get.h"
#include "GL_QCOM_extended_get2.h"
#include "GL_QCOM_perfmon_global_mode.h"
#include "GL_QCOM_tiled_rendering.h"
#include "GL_QCOM_writeonly_rendering.h"
#include "GL_VIV_shader_binary.h"


static PyMethodDef PyCGLES2_ContextMethods[] = {
#ifdef GL_ES_VERSION_2_0
    {"activeTexture",
     (PyCFunction) PyCGLES2_glActiveTexture,
     METH_VARARGS | METH_KEYWORDS,
     "void glActiveTexture (GLenum texture)"},
    {"attachShader",
     (PyCFunction) PyCGLES2_glAttachShader,
     METH_VARARGS | METH_KEYWORDS,
     "void glAttachShader (GLuint program, GLuint shader)"},
    {"bindAttribLocation",
     (PyCFunction) PyCGLES2_glBindAttribLocation,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindAttribLocation (GLuint program, GLuint index, const GLchar *name)"},
    {"bindBuffer",
     (PyCFunction) PyCGLES2_glBindBuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindBuffer (GLenum target, GLuint buffer)"},
    {"bindFramebuffer",
     (PyCFunction) PyCGLES2_glBindFramebuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindFramebuffer (GLenum target, GLuint framebuffer)"},
    {"bindRenderbuffer",
     (PyCFunction) PyCGLES2_glBindRenderbuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindRenderbuffer (GLenum target, GLuint renderbuffer)"},
    {"bindTexture",
     (PyCFunction) PyCGLES2_glBindTexture,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindTexture (GLenum target, GLuint texture)"},
    {"blendColor",
     (PyCFunction) PyCGLES2_glBlendColor,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)"},
    {"blendEquation",
     (PyCFunction) PyCGLES2_glBlendEquation,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendEquation (GLenum mode)"},
    {"blendEquationSeparate",
     (PyCFunction) PyCGLES2_glBlendEquationSeparate,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha)"},
    {"blendFunc",
     (PyCFunction) PyCGLES2_glBlendFunc,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendFunc (GLenum sfactor, GLenum dfactor)"},
    {"blendFuncSeparate",
     (PyCFunction) PyCGLES2_glBlendFuncSeparate,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)"},
    {"bufferData",
     (PyCFunction) PyCGLES2_glBufferData,
     METH_VARARGS | METH_KEYWORDS,
     "void glBufferData (GLenum target, GLsizeiptr size, const void *data, GLenum usage)"},
    {"bufferSubData",
     (PyCFunction) PyCGLES2_glBufferSubData,
     METH_VARARGS | METH_KEYWORDS,
     "void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void *data)"},
    {"checkFramebufferStatus",
     (PyCFunction) PyCGLES2_glCheckFramebufferStatus,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glCheckFramebufferStatus (GLenum target)"},
    {"clear",
     (PyCFunction) PyCGLES2_glClear,
     METH_VARARGS | METH_KEYWORDS,
     "void glClear (GLbitfield mask)"},
    {"clearColor",
     (PyCFunction) PyCGLES2_glClearColor,
     METH_VARARGS | METH_KEYWORDS,
     "void glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)"},
    {"clearDepthf",
     (PyCFunction) PyCGLES2_glClearDepthf,
     METH_VARARGS | METH_KEYWORDS,
     "void glClearDepthf (GLfloat d)"},
    {"clearStencil",
     (PyCFunction) PyCGLES2_glClearStencil,
     METH_VARARGS | METH_KEYWORDS,
     "void glClearStencil (GLint s)"},
    {"colorMask",
     (PyCFunction) PyCGLES2_glColorMask,
     METH_VARARGS | METH_KEYWORDS,
     "void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)"},
    {"compileShader",
     (PyCFunction) PyCGLES2_glCompileShader,
     METH_VARARGS | METH_KEYWORDS,
     "void glCompileShader (GLuint shader)"},
    {"compressedTexImage2D",
     (PyCFunction) PyCGLES2_glCompressedTexImage2D,
     METH_VARARGS | METH_KEYWORDS,
     "void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data)"},
    {"compressedTexSubImage2D",
     (PyCFunction) PyCGLES2_glCompressedTexSubImage2D,
     METH_VARARGS | METH_KEYWORDS,
     "void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data)"},
    {"copyTexImage2D",
     (PyCFunction) PyCGLES2_glCopyTexImage2D,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)"},
    {"copyTexSubImage2D",
     (PyCFunction) PyCGLES2_glCopyTexSubImage2D,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)"},
    {"createProgram",
     (PyCFunction) PyCGLES2_glCreateProgram,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint glCreateProgram ()"},
    {"createShader",
     (PyCFunction) PyCGLES2_glCreateShader,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint glCreateShader (GLenum type)"},
    {"cullFace",
     (PyCFunction) PyCGLES2_glCullFace,
     METH_VARARGS | METH_KEYWORDS,
     "void glCullFace (GLenum mode)"},
    /* EXTENSION: glDeleteBuffer */
    {"deleteBuffer",
     (PyCFunction) PyCGLES2_glDeleteBuffer,
     METH_VARARGS | METH_KEYWORDS,
     "delete buffer"},
    {"deleteBuffers",
     (PyCFunction) PyCGLES2_glDeleteBuffers,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteBuffers (GLsizei n, const GLuint *buffers)"},
    {"deleteFramebuffers",
     (PyCFunction) PyCGLES2_glDeleteFramebuffers,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers)"},
    {"deleteProgram",
     (PyCFunction) PyCGLES2_glDeleteProgram,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteProgram (GLuint program)"},
    {"deleteRenderbuffers",
     (PyCFunction) PyCGLES2_glDeleteRenderbuffers,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers)"},
    {"deleteShader",
     (PyCFunction) PyCGLES2_glDeleteShader,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteShader (GLuint shader)"},
    {"deleteTextures",
     (PyCFunction) PyCGLES2_glDeleteTextures,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteTextures (GLsizei n, const GLuint *textures)"},
    {"depthFunc",
     (PyCFunction) PyCGLES2_glDepthFunc,
     METH_VARARGS | METH_KEYWORDS,
     "void glDepthFunc (GLenum func)"},
    {"depthMask",
     (PyCFunction) PyCGLES2_glDepthMask,
     METH_VARARGS | METH_KEYWORDS,
     "void glDepthMask (GLboolean flag)"},
    {"depthRangef",
     (PyCFunction) PyCGLES2_glDepthRangef,
     METH_VARARGS | METH_KEYWORDS,
     "void glDepthRangef (GLfloat n, GLfloat f)"},
    {"detachShader",
     (PyCFunction) PyCGLES2_glDetachShader,
     METH_VARARGS | METH_KEYWORDS,
     "void glDetachShader (GLuint program, GLuint shader)"},
    {"disable",
     (PyCFunction) PyCGLES2_glDisable,
     METH_VARARGS | METH_KEYWORDS,
     "void glDisable (GLenum cap)"},
    {"disableVertexAttribArray",
     (PyCFunction) PyCGLES2_glDisableVertexAttribArray,
     METH_VARARGS | METH_KEYWORDS,
     "void glDisableVertexAttribArray (GLuint index)"},
    {"drawArrays",
     (PyCFunction) PyCGLES2_glDrawArrays,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawArrays (GLenum mode, GLint first, GLsizei count)"},
    {"drawElements",
     (PyCFunction) PyCGLES2_glDrawElements,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElements (GLenum mode, GLsizei count, GLenum type, const void *indices)"},
    {"enable",
     (PyCFunction) PyCGLES2_glEnable,
     METH_VARARGS | METH_KEYWORDS,
     "void glEnable (GLenum cap)"},
    {"enableVertexAttribArray",
     (PyCFunction) PyCGLES2_glEnableVertexAttribArray,
     METH_VARARGS | METH_KEYWORDS,
     "void glEnableVertexAttribArray (GLuint index)"},
    {"finish",
     (PyCFunction) PyCGLES2_glFinish,
     METH_VARARGS | METH_KEYWORDS,
     "void glFinish ()"},
    {"flush",
     (PyCFunction) PyCGLES2_glFlush,
     METH_VARARGS | METH_KEYWORDS,
     "void glFlush ()"},
    {"framebufferRenderbuffer",
     (PyCFunction) PyCGLES2_glFramebufferRenderbuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)"},
    {"framebufferTexture2D",
     (PyCFunction) PyCGLES2_glFramebufferTexture2D,
     METH_VARARGS | METH_KEYWORDS,
     "void glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)"},
    {"frontFace",
     (PyCFunction) PyCGLES2_glFrontFace,
     METH_VARARGS | METH_KEYWORDS,
     "void glFrontFace (GLenum mode)"},
    /* EXTENSION: glCreateBuffer */
    {"createBuffer",
     (PyCFunction) PyCGLES2_glCreateBuffer,
     METH_VARARGS | METH_KEYWORDS,
     "create buffer"},
    {"genBuffers",
     (PyCFunction) PyCGLES2_glGenBuffers,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenBuffers (GLsizei n, GLuint *buffers)"},
    {"generateMipmap",
     (PyCFunction) PyCGLES2_glGenerateMipmap,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenerateMipmap (GLenum target)"},
    {"genFramebuffers",
     (PyCFunction) PyCGLES2_glGenFramebuffers,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenFramebuffers (GLsizei n, GLuint *framebuffers)"},
    {"genRenderbuffers",
     (PyCFunction) PyCGLES2_glGenRenderbuffers,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenRenderbuffers (GLsizei n, GLuint *renderbuffers)"},
    {"genTextures",
     (PyCFunction) PyCGLES2_glGenTextures,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenTextures (GLsizei n, GLuint *textures)"},
    {"getActiveAttrib",
     (PyCFunction) PyCGLES2_glGetActiveAttrib,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)"},
    {"getActiveUniform",
     (PyCFunction) PyCGLES2_glGetActiveUniform,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)"},
    {"getAttachedShaders",
     (PyCFunction) PyCGLES2_glGetAttachedShaders,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders)"},
    {"getAttribLocation",
     (PyCFunction) PyCGLES2_glGetAttribLocation,
     METH_VARARGS | METH_KEYWORDS,
     "GLint glGetAttribLocation (GLuint program, const GLchar *name)"},
    {"getBooleanv",
     (PyCFunction) PyCGLES2_glGetBooleanv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetBooleanv (GLenum pname, GLboolean *data)"},
    {"getBufferParameteriv",
     (PyCFunction) PyCGLES2_glGetBufferParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params)"},
    {"getError",
     (PyCFunction) PyCGLES2_glGetError,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glGetError ()"},
    {"getFloatv",
     (PyCFunction) PyCGLES2_glGetFloatv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetFloatv (GLenum pname, GLfloat *data)"},
    {"getFramebufferAttachmentParameteriv",
     (PyCFunction) PyCGLES2_glGetFramebufferAttachmentParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params)"},
    {"getIntegerv",
     (PyCFunction) PyCGLES2_glGetIntegerv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetIntegerv (GLenum pname, GLint *data)"},
    {"getProgramiv",
     (PyCFunction) PyCGLES2_glGetProgramiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramiv (GLuint program, GLenum pname, GLint *params)"},
    {"getProgramInfoLog",
     (PyCFunction) PyCGLES2_glGetProgramInfoLog,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)"},
    {"getRenderbufferParameteriv",
     (PyCFunction) PyCGLES2_glGetRenderbufferParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params)"},
    {"getShaderiv",
     (PyCFunction) PyCGLES2_glGetShaderiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetShaderiv (GLuint shader, GLenum pname, GLint *params)"},
    {"getShaderInfoLog",
     (PyCFunction) PyCGLES2_glGetShaderInfoLog,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)"},
    {"getShaderPrecisionFormat",
     (PyCFunction) PyCGLES2_glGetShaderPrecisionFormat,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision)"},
    {"getShaderSource",
     (PyCFunction) PyCGLES2_glGetShaderSource,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)"},
    {"getString",
     (PyCFunction) PyCGLES2_glGetString,
     METH_VARARGS | METH_KEYWORDS,
     "const GLubyte *glGetString (GLenum name)"},
    {"getTexParameterfv",
     (PyCFunction) PyCGLES2_glGetTexParameterfv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params)"},
    {"getTexParameteriv",
     (PyCFunction) PyCGLES2_glGetTexParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params)"},
    {"getUniformfv",
     (PyCFunction) PyCGLES2_glGetUniformfv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetUniformfv (GLuint program, GLint location, GLfloat *params)"},
    {"getUniformiv",
     (PyCFunction) PyCGLES2_glGetUniformiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetUniformiv (GLuint program, GLint location, GLint *params)"},
    {"getUniformLocation",
     (PyCFunction) PyCGLES2_glGetUniformLocation,
     METH_VARARGS | METH_KEYWORDS,
     "GLint glGetUniformLocation (GLuint program, const GLchar *name)"},
    {"getVertexAttribfv",
     (PyCFunction) PyCGLES2_glGetVertexAttribfv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params)"},
    {"getVertexAttribiv",
     (PyCFunction) PyCGLES2_glGetVertexAttribiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params)"},
    {"getVertexAttribPointerv",
     (PyCFunction) PyCGLES2_glGetVertexAttribPointerv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetVertexAttribPointerv (GLuint index, GLenum pname, void **pointer)"},
    {"hint",
     (PyCFunction) PyCGLES2_glHint,
     METH_VARARGS | METH_KEYWORDS,
     "void glHint (GLenum target, GLenum mode)"},
    {"isBuffer",
     (PyCFunction) PyCGLES2_glIsBuffer,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsBuffer (GLuint buffer)"},
    {"isEnabled",
     (PyCFunction) PyCGLES2_glIsEnabled,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsEnabled (GLenum cap)"},
    {"isFramebuffer",
     (PyCFunction) PyCGLES2_glIsFramebuffer,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsFramebuffer (GLuint framebuffer)"},
    {"isProgram",
     (PyCFunction) PyCGLES2_glIsProgram,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsProgram (GLuint program)"},
    {"isRenderbuffer",
     (PyCFunction) PyCGLES2_glIsRenderbuffer,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsRenderbuffer (GLuint renderbuffer)"},
    {"isShader",
     (PyCFunction) PyCGLES2_glIsShader,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsShader (GLuint shader)"},
    {"isTexture",
     (PyCFunction) PyCGLES2_glIsTexture,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsTexture (GLuint texture)"},
    {"lineWidth",
     (PyCFunction) PyCGLES2_glLineWidth,
     METH_VARARGS | METH_KEYWORDS,
     "void glLineWidth (GLfloat width)"},
    {"linkProgram",
     (PyCFunction) PyCGLES2_glLinkProgram,
     METH_VARARGS | METH_KEYWORDS,
     "void glLinkProgram (GLuint program)"},
    {"pixelStorei",
     (PyCFunction) PyCGLES2_glPixelStorei,
     METH_VARARGS | METH_KEYWORDS,
     "void glPixelStorei (GLenum pname, GLint param)"},
    {"polygonOffset",
     (PyCFunction) PyCGLES2_glPolygonOffset,
     METH_VARARGS | METH_KEYWORDS,
     "void glPolygonOffset (GLfloat factor, GLfloat units)"},
    {"readPixels",
     (PyCFunction) PyCGLES2_glReadPixels,
     METH_VARARGS | METH_KEYWORDS,
     "void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels)"},
    {"releaseShaderCompiler",
     (PyCFunction) PyCGLES2_glReleaseShaderCompiler,
     METH_VARARGS | METH_KEYWORDS,
     "void glReleaseShaderCompiler ()"},
    {"renderbufferStorage",
     (PyCFunction) PyCGLES2_glRenderbufferStorage,
     METH_VARARGS | METH_KEYWORDS,
     "void glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height)"},
    {"sampleCoverage",
     (PyCFunction) PyCGLES2_glSampleCoverage,
     METH_VARARGS | METH_KEYWORDS,
     "void glSampleCoverage (GLfloat value, GLboolean invert)"},
    {"scissor",
     (PyCFunction) PyCGLES2_glScissor,
     METH_VARARGS | METH_KEYWORDS,
     "void glScissor (GLint x, GLint y, GLsizei width, GLsizei height)"},
    {"shaderBinary",
     (PyCFunction) PyCGLES2_glShaderBinary,
     METH_VARARGS | METH_KEYWORDS,
     "void glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length)"},
    {"shaderSource",
     (PyCFunction) PyCGLES2_glShaderSource,
     METH_VARARGS | METH_KEYWORDS,
     "void glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length)"},
    {"stencilFunc",
     (PyCFunction) PyCGLES2_glStencilFunc,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilFunc (GLenum func, GLint ref, GLuint mask)"},
    {"stencilFuncSeparate",
     (PyCFunction) PyCGLES2_glStencilFuncSeparate,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask)"},
    {"stencilMask",
     (PyCFunction) PyCGLES2_glStencilMask,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilMask (GLuint mask)"},
    {"stencilMaskSeparate",
     (PyCFunction) PyCGLES2_glStencilMaskSeparate,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilMaskSeparate (GLenum face, GLuint mask)"},
    {"stencilOp",
     (PyCFunction) PyCGLES2_glStencilOp,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass)"},
    {"stencilOpSeparate",
     (PyCFunction) PyCGLES2_glStencilOpSeparate,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)"},
    {"texImage2D",
     (PyCFunction) PyCGLES2_glTexImage2D,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels)"},
    {"texParameterf",
     (PyCFunction) PyCGLES2_glTexParameterf,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexParameterf (GLenum target, GLenum pname, GLfloat param)"},
    {"texParameterfv",
     (PyCFunction) PyCGLES2_glTexParameterfv,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params)"},
    {"texParameteri",
     (PyCFunction) PyCGLES2_glTexParameteri,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexParameteri (GLenum target, GLenum pname, GLint param)"},
    {"texParameteriv",
     (PyCFunction) PyCGLES2_glTexParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexParameteriv (GLenum target, GLenum pname, const GLint *params)"},
    {"texSubImage2D",
     (PyCFunction) PyCGLES2_glTexSubImage2D,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels)"},
    {"uniform1f",
     (PyCFunction) PyCGLES2_glUniform1f,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform1f (GLint location, GLfloat v0)"},
    {"uniform1fv",
     (PyCFunction) PyCGLES2_glUniform1fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform1fv (GLint location, GLsizei count, const GLfloat *value)"},
    {"uniform1i",
     (PyCFunction) PyCGLES2_glUniform1i,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform1i (GLint location, GLint v0)"},
    {"uniform1iv",
     (PyCFunction) PyCGLES2_glUniform1iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform1iv (GLint location, GLsizei count, const GLint *value)"},
    {"uniform2f",
     (PyCFunction) PyCGLES2_glUniform2f,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform2f (GLint location, GLfloat v0, GLfloat v1)"},
    {"uniform2fv",
     (PyCFunction) PyCGLES2_glUniform2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform2fv (GLint location, GLsizei count, const GLfloat *value)"},
    {"uniform2i",
     (PyCFunction) PyCGLES2_glUniform2i,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform2i (GLint location, GLint v0, GLint v1)"},
    {"uniform2iv",
     (PyCFunction) PyCGLES2_glUniform2iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform2iv (GLint location, GLsizei count, const GLint *value)"},
    {"uniform3f",
     (PyCFunction) PyCGLES2_glUniform3f,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)"},
    {"uniform3fv",
     (PyCFunction) PyCGLES2_glUniform3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform3fv (GLint location, GLsizei count, const GLfloat *value)"},
    {"uniform3i",
     (PyCFunction) PyCGLES2_glUniform3i,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform3i (GLint location, GLint v0, GLint v1, GLint v2)"},
    {"uniform3iv",
     (PyCFunction) PyCGLES2_glUniform3iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform3iv (GLint location, GLsizei count, const GLint *value)"},
    {"uniform4f",
     (PyCFunction) PyCGLES2_glUniform4f,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)"},
    {"uniform4fv",
     (PyCFunction) PyCGLES2_glUniform4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform4fv (GLint location, GLsizei count, const GLfloat *value)"},
    {"uniform4i",
     (PyCFunction) PyCGLES2_glUniform4i,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3)"},
    {"uniform4iv",
     (PyCFunction) PyCGLES2_glUniform4iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform4iv (GLint location, GLsizei count, const GLint *value)"},
    {"uniformMatrix2fv",
     (PyCFunction) PyCGLES2_glUniformMatrix2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix3fv",
     (PyCFunction) PyCGLES2_glUniformMatrix3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix4fv",
     (PyCFunction) PyCGLES2_glUniformMatrix4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"useProgram",
     (PyCFunction) PyCGLES2_glUseProgram,
     METH_VARARGS | METH_KEYWORDS,
     "void glUseProgram (GLuint program)"},
    {"validateProgram",
     (PyCFunction) PyCGLES2_glValidateProgram,
     METH_VARARGS | METH_KEYWORDS,
     "void glValidateProgram (GLuint program)"},
    {"vertexAttrib1f",
     (PyCFunction) PyCGLES2_glVertexAttrib1f,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttrib1f (GLuint index, GLfloat x)"},
    {"vertexAttrib1fv",
     (PyCFunction) PyCGLES2_glVertexAttrib1fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttrib1fv (GLuint index, const GLfloat *v)"},
    {"vertexAttrib2f",
     (PyCFunction) PyCGLES2_glVertexAttrib2f,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y)"},
    {"vertexAttrib2fv",
     (PyCFunction) PyCGLES2_glVertexAttrib2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttrib2fv (GLuint index, const GLfloat *v)"},
    {"vertexAttrib3f",
     (PyCFunction) PyCGLES2_glVertexAttrib3f,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z)"},
    {"vertexAttrib3fv",
     (PyCFunction) PyCGLES2_glVertexAttrib3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttrib3fv (GLuint index, const GLfloat *v)"},
    {"vertexAttrib4f",
     (PyCFunction) PyCGLES2_glVertexAttrib4f,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)"},
    {"vertexAttrib4fv",
     (PyCFunction) PyCGLES2_glVertexAttrib4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttrib4fv (GLuint index, const GLfloat *v)"},
    {"vertexAttribPointer",
     (PyCFunction) PyCGLES2_glVertexAttribPointer,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer)"},
    {"viewport",
     (PyCFunction) PyCGLES2_glViewport,
     METH_VARARGS | METH_KEYWORDS,
     "void glViewport (GLint x, GLint y, GLsizei width, GLsizei height)"},
#endif /* GL_ES_VERSION_2_0 */
#ifdef GL_ES_VERSION_3_0
    {"readBuffer",
     (PyCFunction) PyCGLES2_glReadBuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glReadBuffer (GLenum src)"},
    {"drawRangeElements",
     (PyCFunction) PyCGLES2_glDrawRangeElements,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices)"},
    {"texImage3D",
     (PyCFunction) PyCGLES2_glTexImage3D,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)"},
    {"texSubImage3D",
     (PyCFunction) PyCGLES2_glTexSubImage3D,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)"},
    {"copyTexSubImage3D",
     (PyCFunction) PyCGLES2_glCopyTexSubImage3D,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)"},
    {"compressedTexImage3D",
     (PyCFunction) PyCGLES2_glCompressedTexImage3D,
     METH_VARARGS | METH_KEYWORDS,
     "void glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data)"},
    {"compressedTexSubImage3D",
     (PyCFunction) PyCGLES2_glCompressedTexSubImage3D,
     METH_VARARGS | METH_KEYWORDS,
     "void glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data)"},
    {"genQueries",
     (PyCFunction) PyCGLES2_glGenQueries,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenQueries (GLsizei n, GLuint *ids)"},
    {"deleteQueries",
     (PyCFunction) PyCGLES2_glDeleteQueries,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteQueries (GLsizei n, const GLuint *ids)"},
    {"isQuery",
     (PyCFunction) PyCGLES2_glIsQuery,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsQuery (GLuint id)"},
    {"beginQuery",
     (PyCFunction) PyCGLES2_glBeginQuery,
     METH_VARARGS | METH_KEYWORDS,
     "void glBeginQuery (GLenum target, GLuint id)"},
    {"endQuery",
     (PyCFunction) PyCGLES2_glEndQuery,
     METH_VARARGS | METH_KEYWORDS,
     "void glEndQuery (GLenum target)"},
    {"getQueryiv",
     (PyCFunction) PyCGLES2_glGetQueryiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetQueryiv (GLenum target, GLenum pname, GLint *params)"},
    {"getQueryObjectuiv",
     (PyCFunction) PyCGLES2_glGetQueryObjectuiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params)"},
    {"unmapBuffer",
     (PyCFunction) PyCGLES2_glUnmapBuffer,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glUnmapBuffer (GLenum target)"},
    {"getBufferPointerv",
     (PyCFunction) PyCGLES2_glGetBufferPointerv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetBufferPointerv (GLenum target, GLenum pname, void **params)"},
    {"drawBuffers",
     (PyCFunction) PyCGLES2_glDrawBuffers,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawBuffers (GLsizei n, const GLenum *bufs)"},
    {"uniformMatrix2x3fv",
     (PyCFunction) PyCGLES2_glUniformMatrix2x3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix3x2fv",
     (PyCFunction) PyCGLES2_glUniformMatrix3x2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix2x4fv",
     (PyCFunction) PyCGLES2_glUniformMatrix2x4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix4x2fv",
     (PyCFunction) PyCGLES2_glUniformMatrix4x2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix3x4fv",
     (PyCFunction) PyCGLES2_glUniformMatrix3x4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix4x3fv",
     (PyCFunction) PyCGLES2_glUniformMatrix4x3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"blitFramebuffer",
     (PyCFunction) PyCGLES2_glBlitFramebuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)"},
    {"renderbufferStorageMultisample",
     (PyCFunction) PyCGLES2_glRenderbufferStorageMultisample,
     METH_VARARGS | METH_KEYWORDS,
     "void glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"},
    {"framebufferTextureLayer",
     (PyCFunction) PyCGLES2_glFramebufferTextureLayer,
     METH_VARARGS | METH_KEYWORDS,
     "void glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)"},
    {"mapBufferRange",
     (PyCFunction) PyCGLES2_glMapBufferRange,
     METH_VARARGS | METH_KEYWORDS,
     "void *glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)"},
    {"flushMappedBufferRange",
     (PyCFunction) PyCGLES2_glFlushMappedBufferRange,
     METH_VARARGS | METH_KEYWORDS,
     "void glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length)"},
    {"bindVertexArray",
     (PyCFunction) PyCGLES2_glBindVertexArray,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindVertexArray (GLuint array)"},
    {"deleteVertexArrays",
     (PyCFunction) PyCGLES2_glDeleteVertexArrays,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteVertexArrays (GLsizei n, const GLuint *arrays)"},
    {"genVertexArrays",
     (PyCFunction) PyCGLES2_glGenVertexArrays,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenVertexArrays (GLsizei n, GLuint *arrays)"},
    {"isVertexArray",
     (PyCFunction) PyCGLES2_glIsVertexArray,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsVertexArray (GLuint array)"},
    {"getIntegeri_v",
     (PyCFunction) PyCGLES2_glGetIntegeri_v,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetIntegeri_v (GLenum target, GLuint index, GLint *data)"},
    {"beginTransformFeedback",
     (PyCFunction) PyCGLES2_glBeginTransformFeedback,
     METH_VARARGS | METH_KEYWORDS,
     "void glBeginTransformFeedback (GLenum primitiveMode)"},
    {"endTransformFeedback",
     (PyCFunction) PyCGLES2_glEndTransformFeedback,
     METH_VARARGS | METH_KEYWORDS,
     "void glEndTransformFeedback ()"},
    {"bindBufferRange",
     (PyCFunction) PyCGLES2_glBindBufferRange,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)"},
    {"bindBufferBase",
     (PyCFunction) PyCGLES2_glBindBufferBase,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindBufferBase (GLenum target, GLuint index, GLuint buffer)"},
    {"transformFeedbackVaryings",
     (PyCFunction) PyCGLES2_glTransformFeedbackVaryings,
     METH_VARARGS | METH_KEYWORDS,
     "void glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode)"},
    {"getTransformFeedbackVarying",
     (PyCFunction) PyCGLES2_glGetTransformFeedbackVarying,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)"},
    {"vertexAttribIPointer",
     (PyCFunction) PyCGLES2_glVertexAttribIPointer,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer)"},
    {"getVertexAttribIiv",
     (PyCFunction) PyCGLES2_glGetVertexAttribIiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params)"},
    {"getVertexAttribIuiv",
     (PyCFunction) PyCGLES2_glGetVertexAttribIuiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params)"},
    {"vertexAttribI4i",
     (PyCFunction) PyCGLES2_glVertexAttribI4i,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w)"},
    {"vertexAttribI4ui",
     (PyCFunction) PyCGLES2_glVertexAttribI4ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)"},
    {"vertexAttribI4iv",
     (PyCFunction) PyCGLES2_glVertexAttribI4iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribI4iv (GLuint index, const GLint *v)"},
    {"vertexAttribI4uiv",
     (PyCFunction) PyCGLES2_glVertexAttribI4uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribI4uiv (GLuint index, const GLuint *v)"},
    {"getUniformuiv",
     (PyCFunction) PyCGLES2_glGetUniformuiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetUniformuiv (GLuint program, GLint location, GLuint *params)"},
    {"getFragDataLocation",
     (PyCFunction) PyCGLES2_glGetFragDataLocation,
     METH_VARARGS | METH_KEYWORDS,
     "GLint glGetFragDataLocation (GLuint program, const GLchar *name)"},
    {"uniform1ui",
     (PyCFunction) PyCGLES2_glUniform1ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform1ui (GLint location, GLuint v0)"},
    {"uniform2ui",
     (PyCFunction) PyCGLES2_glUniform2ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform2ui (GLint location, GLuint v0, GLuint v1)"},
    {"uniform3ui",
     (PyCFunction) PyCGLES2_glUniform3ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2)"},
    {"uniform4ui",
     (PyCFunction) PyCGLES2_glUniform4ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)"},
    {"uniform1uiv",
     (PyCFunction) PyCGLES2_glUniform1uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform1uiv (GLint location, GLsizei count, const GLuint *value)"},
    {"uniform2uiv",
     (PyCFunction) PyCGLES2_glUniform2uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform2uiv (GLint location, GLsizei count, const GLuint *value)"},
    {"uniform3uiv",
     (PyCFunction) PyCGLES2_glUniform3uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform3uiv (GLint location, GLsizei count, const GLuint *value)"},
    {"uniform4uiv",
     (PyCFunction) PyCGLES2_glUniform4uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniform4uiv (GLint location, GLsizei count, const GLuint *value)"},
    {"clearBufferiv",
     (PyCFunction) PyCGLES2_glClearBufferiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value)"},
    {"clearBufferuiv",
     (PyCFunction) PyCGLES2_glClearBufferuiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value)"},
    {"clearBufferfv",
     (PyCFunction) PyCGLES2_glClearBufferfv,
     METH_VARARGS | METH_KEYWORDS,
     "void glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value)"},
    {"clearBufferfi",
     (PyCFunction) PyCGLES2_glClearBufferfi,
     METH_VARARGS | METH_KEYWORDS,
     "void glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)"},
    {"getStringi",
     (PyCFunction) PyCGLES2_glGetStringi,
     METH_VARARGS | METH_KEYWORDS,
     "const GLubyte *glGetStringi (GLenum name, GLuint index)"},
    {"copyBufferSubData",
     (PyCFunction) PyCGLES2_glCopyBufferSubData,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)"},
    {"getUniformIndices",
     (PyCFunction) PyCGLES2_glGetUniformIndices,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices)"},
    {"getActiveUniformsiv",
     (PyCFunction) PyCGLES2_glGetActiveUniformsiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params)"},
    {"getUniformBlockIndex",
     (PyCFunction) PyCGLES2_glGetUniformBlockIndex,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName)"},
    {"getActiveUniformBlockiv",
     (PyCFunction) PyCGLES2_glGetActiveUniformBlockiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)"},
    {"getActiveUniformBlockName",
     (PyCFunction) PyCGLES2_glGetActiveUniformBlockName,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName)"},
    {"uniformBlockBinding",
     (PyCFunction) PyCGLES2_glUniformBlockBinding,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)"},
    {"drawArraysInstanced",
     (PyCFunction) PyCGLES2_glDrawArraysInstanced,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount)"},
    {"drawElementsInstanced",
     (PyCFunction) PyCGLES2_glDrawElementsInstanced,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount)"},
    {"fenceSync",
     (PyCFunction) PyCGLES2_glFenceSync,
     METH_VARARGS | METH_KEYWORDS,
     "GLsync glFenceSync (GLenum condition, GLbitfield flags)"},
    {"isSync",
     (PyCFunction) PyCGLES2_glIsSync,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsSync (GLsync sync)"},
    {"deleteSync",
     (PyCFunction) PyCGLES2_glDeleteSync,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteSync (GLsync sync)"},
    {"clientWaitSync",
     (PyCFunction) PyCGLES2_glClientWaitSync,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout)"},
    {"waitSync",
     (PyCFunction) PyCGLES2_glWaitSync,
     METH_VARARGS | METH_KEYWORDS,
     "void glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout)"},
    {"getInteger64v",
     (PyCFunction) PyCGLES2_glGetInteger64v,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetInteger64v (GLenum pname, GLint64 *data)"},
    {"getSynciv",
     (PyCFunction) PyCGLES2_glGetSynciv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)"},
    {"getInteger64i_v",
     (PyCFunction) PyCGLES2_glGetInteger64i_v,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data)"},
    {"getBufferParameteri64v",
     (PyCFunction) PyCGLES2_glGetBufferParameteri64v,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params)"},
    {"genSamplers",
     (PyCFunction) PyCGLES2_glGenSamplers,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenSamplers (GLsizei count, GLuint *samplers)"},
    {"deleteSamplers",
     (PyCFunction) PyCGLES2_glDeleteSamplers,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteSamplers (GLsizei count, const GLuint *samplers)"},
    {"isSampler",
     (PyCFunction) PyCGLES2_glIsSampler,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsSampler (GLuint sampler)"},
    {"bindSampler",
     (PyCFunction) PyCGLES2_glBindSampler,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindSampler (GLuint unit, GLuint sampler)"},
    {"samplerParameteri",
     (PyCFunction) PyCGLES2_glSamplerParameteri,
     METH_VARARGS | METH_KEYWORDS,
     "void glSamplerParameteri (GLuint sampler, GLenum pname, GLint param)"},
    {"samplerParameteriv",
     (PyCFunction) PyCGLES2_glSamplerParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param)"},
    {"samplerParameterf",
     (PyCFunction) PyCGLES2_glSamplerParameterf,
     METH_VARARGS | METH_KEYWORDS,
     "void glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param)"},
    {"samplerParameterfv",
     (PyCFunction) PyCGLES2_glSamplerParameterfv,
     METH_VARARGS | METH_KEYWORDS,
     "void glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param)"},
    {"getSamplerParameteriv",
     (PyCFunction) PyCGLES2_glGetSamplerParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params)"},
    {"getSamplerParameterfv",
     (PyCFunction) PyCGLES2_glGetSamplerParameterfv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params)"},
    {"vertexAttribDivisor",
     (PyCFunction) PyCGLES2_glVertexAttribDivisor,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribDivisor (GLuint index, GLuint divisor)"},
    {"bindTransformFeedback",
     (PyCFunction) PyCGLES2_glBindTransformFeedback,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindTransformFeedback (GLenum target, GLuint id)"},
    {"deleteTransformFeedbacks",
     (PyCFunction) PyCGLES2_glDeleteTransformFeedbacks,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids)"},
    {"genTransformFeedbacks",
     (PyCFunction) PyCGLES2_glGenTransformFeedbacks,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenTransformFeedbacks (GLsizei n, GLuint *ids)"},
    {"isTransformFeedback",
     (PyCFunction) PyCGLES2_glIsTransformFeedback,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsTransformFeedback (GLuint id)"},
    {"pauseTransformFeedback",
     (PyCFunction) PyCGLES2_glPauseTransformFeedback,
     METH_VARARGS | METH_KEYWORDS,
     "void glPauseTransformFeedback ()"},
    {"resumeTransformFeedback",
     (PyCFunction) PyCGLES2_glResumeTransformFeedback,
     METH_VARARGS | METH_KEYWORDS,
     "void glResumeTransformFeedback ()"},
    {"getProgramBinary",
     (PyCFunction) PyCGLES2_glGetProgramBinary,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary)"},
    {"programBinary",
     (PyCFunction) PyCGLES2_glProgramBinary,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramBinary (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length)"},
    {"programParameteri",
     (PyCFunction) PyCGLES2_glProgramParameteri,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramParameteri (GLuint program, GLenum pname, GLint value)"},
    {"invalidateFramebuffer",
     (PyCFunction) PyCGLES2_glInvalidateFramebuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments)"},
    {"invalidateSubFramebuffer",
     (PyCFunction) PyCGLES2_glInvalidateSubFramebuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height)"},
    {"texStorage2D",
     (PyCFunction) PyCGLES2_glTexStorage2D,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)"},
    {"texStorage3D",
     (PyCFunction) PyCGLES2_glTexStorage3D,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)"},
    {"getInternalformativ",
     (PyCFunction) PyCGLES2_glGetInternalformativ,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params)"},
#endif /* GL_ES_VERSION_3_0 */
#ifdef GL_ES_VERSION_3_1
    {"dispatchCompute",
     (PyCFunction) PyCGLES2_glDispatchCompute,
     METH_VARARGS | METH_KEYWORDS,
     "void glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)"},
    {"dispatchComputeIndirect",
     (PyCFunction) PyCGLES2_glDispatchComputeIndirect,
     METH_VARARGS | METH_KEYWORDS,
     "void glDispatchComputeIndirect (GLintptr indirect)"},
    {"drawArraysIndirect",
     (PyCFunction) PyCGLES2_glDrawArraysIndirect,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawArraysIndirect (GLenum mode, const void *indirect)"},
    {"drawElementsIndirect",
     (PyCFunction) PyCGLES2_glDrawElementsIndirect,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect)"},
    {"framebufferParameteri",
     (PyCFunction) PyCGLES2_glFramebufferParameteri,
     METH_VARARGS | METH_KEYWORDS,
     "void glFramebufferParameteri (GLenum target, GLenum pname, GLint param)"},
    {"getFramebufferParameteriv",
     (PyCFunction) PyCGLES2_glGetFramebufferParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params)"},
    {"getProgramInterfaceiv",
     (PyCFunction) PyCGLES2_glGetProgramInterfaceiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint *params)"},
    {"getProgramResourceIndex",
     (PyCFunction) PyCGLES2_glGetProgramResourceIndex,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar *name)"},
    {"getProgramResourceName",
     (PyCFunction) PyCGLES2_glGetProgramResourceName,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name)"},
    {"getProgramResourceiv",
     (PyCFunction) PyCGLES2_glGetProgramResourceiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params)"},
    {"getProgramResourceLocation",
     (PyCFunction) PyCGLES2_glGetProgramResourceLocation,
     METH_VARARGS | METH_KEYWORDS,
     "GLint glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar *name)"},
    {"useProgramStages",
     (PyCFunction) PyCGLES2_glUseProgramStages,
     METH_VARARGS | METH_KEYWORDS,
     "void glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program)"},
    {"activeShaderProgram",
     (PyCFunction) PyCGLES2_glActiveShaderProgram,
     METH_VARARGS | METH_KEYWORDS,
     "void glActiveShaderProgram (GLuint pipeline, GLuint program)"},
    {"createShaderProgramv",
     (PyCFunction) PyCGLES2_glCreateShaderProgramv,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar *const*strings)"},
    {"bindProgramPipeline",
     (PyCFunction) PyCGLES2_glBindProgramPipeline,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindProgramPipeline (GLuint pipeline)"},
    {"deleteProgramPipelines",
     (PyCFunction) PyCGLES2_glDeleteProgramPipelines,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteProgramPipelines (GLsizei n, const GLuint *pipelines)"},
    {"genProgramPipelines",
     (PyCFunction) PyCGLES2_glGenProgramPipelines,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenProgramPipelines (GLsizei n, GLuint *pipelines)"},
    {"isProgramPipeline",
     (PyCFunction) PyCGLES2_glIsProgramPipeline,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsProgramPipeline (GLuint pipeline)"},
    {"getProgramPipelineiv",
     (PyCFunction) PyCGLES2_glGetProgramPipelineiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint *params)"},
    {"programUniform1i",
     (PyCFunction) PyCGLES2_glProgramUniform1i,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1i (GLuint program, GLint location, GLint v0)"},
    {"programUniform2i",
     (PyCFunction) PyCGLES2_glProgramUniform2i,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1)"},
    {"programUniform3i",
     (PyCFunction) PyCGLES2_glProgramUniform3i,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2)"},
    {"programUniform4i",
     (PyCFunction) PyCGLES2_glProgramUniform4i,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)"},
    {"programUniform1ui",
     (PyCFunction) PyCGLES2_glProgramUniform1ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1ui (GLuint program, GLint location, GLuint v0)"},
    {"programUniform2ui",
     (PyCFunction) PyCGLES2_glProgramUniform2ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1)"},
    {"programUniform3ui",
     (PyCFunction) PyCGLES2_glProgramUniform3ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)"},
    {"programUniform4ui",
     (PyCFunction) PyCGLES2_glProgramUniform4ui,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)"},
    {"programUniform1f",
     (PyCFunction) PyCGLES2_glProgramUniform1f,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1f (GLuint program, GLint location, GLfloat v0)"},
    {"programUniform2f",
     (PyCFunction) PyCGLES2_glProgramUniform2f,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1)"},
    {"programUniform3f",
     (PyCFunction) PyCGLES2_glProgramUniform3f,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)"},
    {"programUniform4f",
     (PyCFunction) PyCGLES2_glProgramUniform4f,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)"},
    {"programUniform1iv",
     (PyCFunction) PyCGLES2_glProgramUniform1iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint *value)"},
    {"programUniform2iv",
     (PyCFunction) PyCGLES2_glProgramUniform2iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint *value)"},
    {"programUniform3iv",
     (PyCFunction) PyCGLES2_glProgramUniform3iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint *value)"},
    {"programUniform4iv",
     (PyCFunction) PyCGLES2_glProgramUniform4iv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint *value)"},
    {"programUniform1uiv",
     (PyCFunction) PyCGLES2_glProgramUniform1uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint *value)"},
    {"programUniform2uiv",
     (PyCFunction) PyCGLES2_glProgramUniform2uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint *value)"},
    {"programUniform3uiv",
     (PyCFunction) PyCGLES2_glProgramUniform3uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint *value)"},
    {"programUniform4uiv",
     (PyCFunction) PyCGLES2_glProgramUniform4uiv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint *value)"},
    {"programUniform1fv",
     (PyCFunction) PyCGLES2_glProgramUniform1fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat *value)"},
    {"programUniform2fv",
     (PyCFunction) PyCGLES2_glProgramUniform2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat *value)"},
    {"programUniform3fv",
     (PyCFunction) PyCGLES2_glProgramUniform3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat *value)"},
    {"programUniform4fv",
     (PyCFunction) PyCGLES2_glProgramUniform4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat *value)"},
    {"programUniformMatrix2fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix3fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix4fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix2x3fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix2x3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix3x2fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix3x2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix2x4fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix2x4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix4x2fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix4x2fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix3x4fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix3x4fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix4x3fv",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix4x3fv,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"validateProgramPipeline",
     (PyCFunction) PyCGLES2_glValidateProgramPipeline,
     METH_VARARGS | METH_KEYWORDS,
     "void glValidateProgramPipeline (GLuint pipeline)"},
    {"getProgramPipelineInfoLog",
     (PyCFunction) PyCGLES2_glGetProgramPipelineInfoLog,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)"},
    {"bindImageTexture",
     (PyCFunction) PyCGLES2_glBindImageTexture,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format)"},
    {"getBooleani_v",
     (PyCFunction) PyCGLES2_glGetBooleani_v,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetBooleani_v (GLenum target, GLuint index, GLboolean *data)"},
    {"memoryBarrier",
     (PyCFunction) PyCGLES2_glMemoryBarrier,
     METH_VARARGS | METH_KEYWORDS,
     "void glMemoryBarrier (GLbitfield barriers)"},
    {"memoryBarrierByRegion",
     (PyCFunction) PyCGLES2_glMemoryBarrierByRegion,
     METH_VARARGS | METH_KEYWORDS,
     "void glMemoryBarrierByRegion (GLbitfield barriers)"},
    {"texStorage2DMultisample",
     (PyCFunction) PyCGLES2_glTexStorage2DMultisample,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)"},
    {"getMultisamplefv",
     (PyCFunction) PyCGLES2_glGetMultisamplefv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetMultisamplefv (GLenum pname, GLuint index, GLfloat *val)"},
    {"sampleMaski",
     (PyCFunction) PyCGLES2_glSampleMaski,
     METH_VARARGS | METH_KEYWORDS,
     "void glSampleMaski (GLuint maskNumber, GLbitfield mask)"},
    {"getTexLevelParameteriv",
     (PyCFunction) PyCGLES2_glGetTexLevelParameteriv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params)"},
    {"getTexLevelParameterfv",
     (PyCFunction) PyCGLES2_glGetTexLevelParameterfv,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params)"},
    {"bindVertexBuffer",
     (PyCFunction) PyCGLES2_glBindVertexBuffer,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride)"},
    {"vertexAttribFormat",
     (PyCFunction) PyCGLES2_glVertexAttribFormat,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset)"},
    {"vertexAttribIFormat",
     (PyCFunction) PyCGLES2_glVertexAttribIFormat,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)"},
    {"vertexAttribBinding",
     (PyCFunction) PyCGLES2_glVertexAttribBinding,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribBinding (GLuint attribindex, GLuint bindingindex)"},
    {"vertexBindingDivisor",
     (PyCFunction) PyCGLES2_glVertexBindingDivisor,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexBindingDivisor (GLuint bindingindex, GLuint divisor)"},
#endif /* GL_ES_VERSION_3_1 */
#ifdef GL_KHR_blend_equation_advanced
    {"blendBarrierKHR",
     (PyCFunction) PyCGLES2_glBlendBarrierKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendBarrierKHR ()"},
#endif /* GL_KHR_blend_equation_advanced */
#ifdef GL_KHR_blend_equation_advanced_coherent
#endif /* GL_KHR_blend_equation_advanced_coherent */
#ifdef GL_KHR_context_flush_control
#endif /* GL_KHR_context_flush_control */
#ifdef GL_KHR_debug
    {"debugMessageControlKHR",
     (PyCFunction) PyCGLES2_glDebugMessageControlKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glDebugMessageControlKHR (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)"},
    {"debugMessageInsertKHR",
     (PyCFunction) PyCGLES2_glDebugMessageInsertKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glDebugMessageInsertKHR (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)"},
    {"debugMessageCallbackKHR",
     (PyCFunction) PyCGLES2_glDebugMessageCallbackKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glDebugMessageCallbackKHR (GLDEBUGPROCKHR callback, const void *userParam)"},
    {"getDebugMessageLogKHR",
     (PyCFunction) PyCGLES2_glGetDebugMessageLogKHR,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint glGetDebugMessageLogKHR (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)"},
    {"pushDebugGroupKHR",
     (PyCFunction) PyCGLES2_glPushDebugGroupKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glPushDebugGroupKHR (GLenum source, GLuint id, GLsizei length, const GLchar *message)"},
    {"popDebugGroupKHR",
     (PyCFunction) PyCGLES2_glPopDebugGroupKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glPopDebugGroupKHR ()"},
    {"objectLabelKHR",
     (PyCFunction) PyCGLES2_glObjectLabelKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glObjectLabelKHR (GLenum identifier, GLuint name, GLsizei length, const GLchar *label)"},
    {"getObjectLabelKHR",
     (PyCFunction) PyCGLES2_glGetObjectLabelKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetObjectLabelKHR (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label)"},
    {"objectPtrLabelKHR",
     (PyCFunction) PyCGLES2_glObjectPtrLabelKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glObjectPtrLabelKHR (const void *ptr, GLsizei length, const GLchar *label)"},
    {"getObjectPtrLabelKHR",
     (PyCFunction) PyCGLES2_glGetObjectPtrLabelKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetObjectPtrLabelKHR (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label)"},
    {"getPointervKHR",
     (PyCFunction) PyCGLES2_glGetPointervKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPointervKHR (GLenum pname, void **params)"},
#endif /* GL_KHR_debug */
#ifdef GL_KHR_robust_buffer_access_behavior
#endif /* GL_KHR_robust_buffer_access_behavior */
#ifdef GL_KHR_robustness
    {"getGraphicsResetStatusKHR",
     (PyCFunction) PyCGLES2_glGetGraphicsResetStatusKHR,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glGetGraphicsResetStatusKHR ()"},
    {"readnPixelsKHR",
     (PyCFunction) PyCGLES2_glReadnPixelsKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glReadnPixelsKHR (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data)"},
    {"getnUniformfvKHR",
     (PyCFunction) PyCGLES2_glGetnUniformfvKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetnUniformfvKHR (GLuint program, GLint location, GLsizei bufSize, GLfloat *params)"},
    {"getnUniformivKHR",
     (PyCFunction) PyCGLES2_glGetnUniformivKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetnUniformivKHR (GLuint program, GLint location, GLsizei bufSize, GLint *params)"},
    {"getnUniformuivKHR",
     (PyCFunction) PyCGLES2_glGetnUniformuivKHR,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetnUniformuivKHR (GLuint program, GLint location, GLsizei bufSize, GLuint *params)"},
#endif /* GL_KHR_robustness */
#ifdef GL_KHR_texture_compression_astc_hdr
#endif /* GL_KHR_texture_compression_astc_hdr */
#ifdef GL_KHR_texture_compression_astc_ldr
#endif /* GL_KHR_texture_compression_astc_ldr */
#ifdef GL_OES_EGL_image
    {"eGLImageTargetTexture2DOES",
     (PyCFunction) PyCGLES2_glEGLImageTargetTexture2DOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glEGLImageTargetTexture2DOES (GLenum target, GLeglImageOES image)"},
    {"eGLImageTargetRenderbufferStorageOES",
     (PyCFunction) PyCGLES2_glEGLImageTargetRenderbufferStorageOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glEGLImageTargetRenderbufferStorageOES (GLenum target, GLeglImageOES image)"},
#endif /* GL_OES_EGL_image */
#ifdef GL_OES_EGL_image_external
#endif /* GL_OES_EGL_image_external */
#ifdef GL_OES_compressed_ETC1_RGB8_sub_texture
#endif /* GL_OES_compressed_ETC1_RGB8_sub_texture */
#ifdef GL_OES_compressed_ETC1_RGB8_texture
#endif /* GL_OES_compressed_ETC1_RGB8_texture */
#ifdef GL_OES_compressed_paletted_texture
#endif /* GL_OES_compressed_paletted_texture */
#ifdef GL_OES_depth24
#endif /* GL_OES_depth24 */
#ifdef GL_OES_depth32
#endif /* GL_OES_depth32 */
#ifdef GL_OES_depth_texture
#endif /* GL_OES_depth_texture */
#ifdef GL_OES_element_index_uint
#endif /* GL_OES_element_index_uint */
#ifdef GL_OES_fbo_render_mipmap
#endif /* GL_OES_fbo_render_mipmap */
#ifdef GL_OES_fragment_precision_high
#endif /* GL_OES_fragment_precision_high */
#ifdef GL_OES_get_program_binary
    {"getProgramBinaryOES",
     (PyCFunction) PyCGLES2_glGetProgramBinaryOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramBinaryOES (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary)"},
    {"programBinaryOES",
     (PyCFunction) PyCGLES2_glProgramBinaryOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramBinaryOES (GLuint program, GLenum binaryFormat, const void *binary, GLint length)"},
#endif /* GL_OES_get_program_binary */
#ifdef GL_OES_mapbuffer
    {"mapBufferOES",
     (PyCFunction) PyCGLES2_glMapBufferOES,
     METH_VARARGS | METH_KEYWORDS,
     "void *glMapBufferOES (GLenum target, GLenum access)"},
    {"unmapBufferOES",
     (PyCFunction) PyCGLES2_glUnmapBufferOES,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glUnmapBufferOES (GLenum target)"},
    {"getBufferPointervOES",
     (PyCFunction) PyCGLES2_glGetBufferPointervOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetBufferPointervOES (GLenum target, GLenum pname, void **params)"},
#endif /* GL_OES_mapbuffer */
#ifdef GL_OES_packed_depth_stencil
#endif /* GL_OES_packed_depth_stencil */
#ifdef GL_OES_required_internalformat
#endif /* GL_OES_required_internalformat */
#ifdef GL_OES_rgb8_rgba8
#endif /* GL_OES_rgb8_rgba8 */
#ifdef GL_OES_sample_shading
    {"minSampleShadingOES",
     (PyCFunction) PyCGLES2_glMinSampleShadingOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glMinSampleShadingOES (GLfloat value)"},
#endif /* GL_OES_sample_shading */
#ifdef GL_OES_sample_variables
#endif /* GL_OES_sample_variables */
#ifdef GL_OES_shader_image_atomic
#endif /* GL_OES_shader_image_atomic */
#ifdef GL_OES_shader_multisample_interpolation
#endif /* GL_OES_shader_multisample_interpolation */
#ifdef GL_OES_standard_derivatives
#endif /* GL_OES_standard_derivatives */
#ifdef GL_OES_stencil1
#endif /* GL_OES_stencil1 */
#ifdef GL_OES_stencil4
#endif /* GL_OES_stencil4 */
#ifdef GL_OES_surfaceless_context
#endif /* GL_OES_surfaceless_context */
#ifdef GL_OES_texture_3D
    {"texImage3DOES",
     (PyCFunction) PyCGLES2_glTexImage3DOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexImage3DOES (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)"},
    {"texSubImage3DOES",
     (PyCFunction) PyCGLES2_glTexSubImage3DOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)"},
    {"copyTexSubImage3DOES",
     (PyCFunction) PyCGLES2_glCopyTexSubImage3DOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)"},
    {"compressedTexImage3DOES",
     (PyCFunction) PyCGLES2_glCompressedTexImage3DOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glCompressedTexImage3DOES (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data)"},
    {"compressedTexSubImage3DOES",
     (PyCFunction) PyCGLES2_glCompressedTexSubImage3DOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glCompressedTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data)"},
    {"framebufferTexture3DOES",
     (PyCFunction) PyCGLES2_glFramebufferTexture3DOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glFramebufferTexture3DOES (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)"},
#endif /* GL_OES_texture_3D */
#ifdef GL_OES_texture_compression_astc
#endif /* GL_OES_texture_compression_astc */
#ifdef GL_OES_texture_float
#endif /* GL_OES_texture_float */
#ifdef GL_OES_texture_float_linear
#endif /* GL_OES_texture_float_linear */
#ifdef GL_OES_texture_half_float
#endif /* GL_OES_texture_half_float */
#ifdef GL_OES_texture_half_float_linear
#endif /* GL_OES_texture_half_float_linear */
#ifdef GL_OES_texture_npot
#endif /* GL_OES_texture_npot */
#ifdef GL_OES_texture_stencil8
#endif /* GL_OES_texture_stencil8 */
#ifdef GL_OES_texture_storage_multisample_2d_array
    {"texStorage3DMultisampleOES",
     (PyCFunction) PyCGLES2_glTexStorage3DMultisampleOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexStorage3DMultisampleOES (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)"},
#endif /* GL_OES_texture_storage_multisample_2d_array */
#ifdef GL_OES_vertex_array_object
    {"bindVertexArrayOES",
     (PyCFunction) PyCGLES2_glBindVertexArrayOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindVertexArrayOES (GLuint array)"},
    {"deleteVertexArraysOES",
     (PyCFunction) PyCGLES2_glDeleteVertexArraysOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteVertexArraysOES (GLsizei n, const GLuint *arrays)"},
    {"genVertexArraysOES",
     (PyCFunction) PyCGLES2_glGenVertexArraysOES,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenVertexArraysOES (GLsizei n, GLuint *arrays)"},
    {"isVertexArrayOES",
     (PyCFunction) PyCGLES2_glIsVertexArrayOES,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsVertexArrayOES (GLuint array)"},
#endif /* GL_OES_vertex_array_object */
#ifdef GL_OES_vertex_half_float
#endif /* GL_OES_vertex_half_float */
#ifdef GL_OES_vertex_type_10_10_10_2
#endif /* GL_OES_vertex_type_10_10_10_2 */
#ifdef GL_AMD_compressed_3DC_texture
#endif /* GL_AMD_compressed_3DC_texture */
#ifdef GL_AMD_compressed_ATC_texture
#endif /* GL_AMD_compressed_ATC_texture */
#ifdef GL_AMD_performance_monitor
    {"getPerfMonitorGroupsAMD",
     (PyCFunction) PyCGLES2_glGetPerfMonitorGroupsAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLuint *groups)"},
    {"getPerfMonitorCountersAMD",
     (PyCFunction) PyCGLES2_glGetPerfMonitorCountersAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters)"},
    {"getPerfMonitorGroupStringAMD",
     (PyCFunction) PyCGLES2_glGetPerfMonitorGroupStringAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString)"},
    {"getPerfMonitorCounterStringAMD",
     (PyCFunction) PyCGLES2_glGetPerfMonitorCounterStringAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString)"},
    {"getPerfMonitorCounterInfoAMD",
     (PyCFunction) PyCGLES2_glGetPerfMonitorCounterInfoAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, void *data)"},
    {"genPerfMonitorsAMD",
     (PyCFunction) PyCGLES2_glGenPerfMonitorsAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors)"},
    {"deletePerfMonitorsAMD",
     (PyCFunction) PyCGLES2_glDeletePerfMonitorsAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors)"},
    {"selectPerfMonitorCountersAMD",
     (PyCFunction) PyCGLES2_glSelectPerfMonitorCountersAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList)"},
    {"beginPerfMonitorAMD",
     (PyCFunction) PyCGLES2_glBeginPerfMonitorAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glBeginPerfMonitorAMD (GLuint monitor)"},
    {"endPerfMonitorAMD",
     (PyCFunction) PyCGLES2_glEndPerfMonitorAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glEndPerfMonitorAMD (GLuint monitor)"},
    {"getPerfMonitorCounterDataAMD",
     (PyCFunction) PyCGLES2_glGetPerfMonitorCounterDataAMD,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten)"},
#endif /* GL_AMD_performance_monitor */
#ifdef GL_AMD_program_binary_Z400
#endif /* GL_AMD_program_binary_Z400 */
#ifdef GL_ANDROID_extension_pack_es31a
#endif /* GL_ANDROID_extension_pack_es31a */
#ifdef GL_ANGLE_depth_texture
#endif /* GL_ANGLE_depth_texture */
#ifdef GL_ANGLE_framebuffer_blit
    {"blitFramebufferANGLE",
     (PyCFunction) PyCGLES2_glBlitFramebufferANGLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlitFramebufferANGLE (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)"},
#endif /* GL_ANGLE_framebuffer_blit */
#ifdef GL_ANGLE_framebuffer_multisample
    {"renderbufferStorageMultisampleANGLE",
     (PyCFunction) PyCGLES2_glRenderbufferStorageMultisampleANGLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glRenderbufferStorageMultisampleANGLE (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"},
#endif /* GL_ANGLE_framebuffer_multisample */
#ifdef GL_ANGLE_instanced_arrays
    {"drawArraysInstancedANGLE",
     (PyCFunction) PyCGLES2_glDrawArraysInstancedANGLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawArraysInstancedANGLE (GLenum mode, GLint first, GLsizei count, GLsizei primcount)"},
    {"drawElementsInstancedANGLE",
     (PyCFunction) PyCGLES2_glDrawElementsInstancedANGLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsInstancedANGLE (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)"},
    {"vertexAttribDivisorANGLE",
     (PyCFunction) PyCGLES2_glVertexAttribDivisorANGLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribDivisorANGLE (GLuint index, GLuint divisor)"},
#endif /* GL_ANGLE_instanced_arrays */
#ifdef GL_ANGLE_pack_reverse_row_order
#endif /* GL_ANGLE_pack_reverse_row_order */
#ifdef GL_ANGLE_program_binary
#endif /* GL_ANGLE_program_binary */
#ifdef GL_ANGLE_texture_compression_dxt3
#endif /* GL_ANGLE_texture_compression_dxt3 */
#ifdef GL_ANGLE_texture_compression_dxt5
#endif /* GL_ANGLE_texture_compression_dxt5 */
#ifdef GL_ANGLE_texture_usage
#endif /* GL_ANGLE_texture_usage */
#ifdef GL_ANGLE_translated_shader_source
    {"getTranslatedShaderSourceANGLE",
     (PyCFunction) PyCGLES2_glGetTranslatedShaderSourceANGLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetTranslatedShaderSourceANGLE (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source)"},
#endif /* GL_ANGLE_translated_shader_source */
#ifdef GL_APPLE_clip_distance
#endif /* GL_APPLE_clip_distance */
#ifdef GL_APPLE_color_buffer_packed_float
#endif /* GL_APPLE_color_buffer_packed_float */
#ifdef GL_APPLE_copy_texture_levels
    {"copyTextureLevelsAPPLE",
     (PyCFunction) PyCGLES2_glCopyTextureLevelsAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyTextureLevelsAPPLE (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount)"},
#endif /* GL_APPLE_copy_texture_levels */
#ifdef GL_APPLE_framebuffer_multisample
    {"renderbufferStorageMultisampleAPPLE",
     (PyCFunction) PyCGLES2_glRenderbufferStorageMultisampleAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glRenderbufferStorageMultisampleAPPLE (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"},
    {"resolveMultisampleFramebufferAPPLE",
     (PyCFunction) PyCGLES2_glResolveMultisampleFramebufferAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glResolveMultisampleFramebufferAPPLE ()"},
#endif /* GL_APPLE_framebuffer_multisample */
#ifdef GL_APPLE_rgb_422
#endif /* GL_APPLE_rgb_422 */
#ifdef GL_APPLE_sync
    {"fenceSyncAPPLE",
     (PyCFunction) PyCGLES2_glFenceSyncAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "GLsync glFenceSyncAPPLE (GLenum condition, GLbitfield flags)"},
    {"isSyncAPPLE",
     (PyCFunction) PyCGLES2_glIsSyncAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsSyncAPPLE (GLsync sync)"},
    {"deleteSyncAPPLE",
     (PyCFunction) PyCGLES2_glDeleteSyncAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteSyncAPPLE (GLsync sync)"},
    {"clientWaitSyncAPPLE",
     (PyCFunction) PyCGLES2_glClientWaitSyncAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glClientWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout)"},
    {"waitSyncAPPLE",
     (PyCFunction) PyCGLES2_glWaitSyncAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout)"},
    {"getInteger64vAPPLE",
     (PyCFunction) PyCGLES2_glGetInteger64vAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetInteger64vAPPLE (GLenum pname, GLint64 *params)"},
    {"getSyncivAPPLE",
     (PyCFunction) PyCGLES2_glGetSyncivAPPLE,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)"},
#endif /* GL_APPLE_sync */
#ifdef GL_APPLE_texture_format_BGRA8888
#endif /* GL_APPLE_texture_format_BGRA8888 */
#ifdef GL_APPLE_texture_max_level
#endif /* GL_APPLE_texture_max_level */
#ifdef GL_APPLE_texture_packed_float
#endif /* GL_APPLE_texture_packed_float */
#ifdef GL_ARM_mali_program_binary
#endif /* GL_ARM_mali_program_binary */
#ifdef GL_ARM_mali_shader_binary
#endif /* GL_ARM_mali_shader_binary */
#ifdef GL_ARM_rgba8
#endif /* GL_ARM_rgba8 */
#ifdef GL_ARM_shader_framebuffer_fetch
#endif /* GL_ARM_shader_framebuffer_fetch */
#ifdef GL_ARM_shader_framebuffer_fetch_depth_stencil
#endif /* GL_ARM_shader_framebuffer_fetch_depth_stencil */
#ifdef GL_DMP_program_binary
#endif /* GL_DMP_program_binary */
#ifdef GL_DMP_shader_binary
#endif /* GL_DMP_shader_binary */
#ifdef GL_EXT_base_instance
    {"drawArraysInstancedBaseInstanceEXT",
     (PyCFunction) PyCGLES2_glDrawArraysInstancedBaseInstanceEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawArraysInstancedBaseInstanceEXT (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance)"},
    {"drawElementsInstancedBaseInstanceEXT",
     (PyCFunction) PyCGLES2_glDrawElementsInstancedBaseInstanceEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsInstancedBaseInstanceEXT (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance)"},
    {"drawElementsInstancedBaseVertexBaseInstanceEXT",
     (PyCFunction) PyCGLES2_glDrawElementsInstancedBaseVertexBaseInstanceEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsInstancedBaseVertexBaseInstanceEXT (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance)"},
#endif /* GL_EXT_base_instance */
#ifdef GL_EXT_blend_minmax
#endif /* GL_EXT_blend_minmax */
#ifdef GL_EXT_color_buffer_half_float
#endif /* GL_EXT_color_buffer_half_float */
#ifdef GL_EXT_copy_image
    {"copyImageSubDataEXT",
     (PyCFunction) PyCGLES2_glCopyImageSubDataEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyImageSubDataEXT (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)"},
#endif /* GL_EXT_copy_image */
#ifdef GL_EXT_debug_label
    {"labelObjectEXT",
     (PyCFunction) PyCGLES2_glLabelObjectEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar *label)"},
    {"getObjectLabelEXT",
     (PyCFunction) PyCGLES2_glGetObjectLabelEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label)"},
#endif /* GL_EXT_debug_label */
#ifdef GL_EXT_debug_marker
    {"insertEventMarkerEXT",
     (PyCFunction) PyCGLES2_glInsertEventMarkerEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glInsertEventMarkerEXT (GLsizei length, const GLchar *marker)"},
    {"pushGroupMarkerEXT",
     (PyCFunction) PyCGLES2_glPushGroupMarkerEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glPushGroupMarkerEXT (GLsizei length, const GLchar *marker)"},
    {"popGroupMarkerEXT",
     (PyCFunction) PyCGLES2_glPopGroupMarkerEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glPopGroupMarkerEXT ()"},
#endif /* GL_EXT_debug_marker */
#ifdef GL_EXT_discard_framebuffer
    {"discardFramebufferEXT",
     (PyCFunction) PyCGLES2_glDiscardFramebufferEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDiscardFramebufferEXT (GLenum target, GLsizei numAttachments, const GLenum *attachments)"},
#endif /* GL_EXT_discard_framebuffer */
#ifdef GL_EXT_disjoint_timer_query
    {"genQueriesEXT",
     (PyCFunction) PyCGLES2_glGenQueriesEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenQueriesEXT (GLsizei n, GLuint *ids)"},
    {"deleteQueriesEXT",
     (PyCFunction) PyCGLES2_glDeleteQueriesEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteQueriesEXT (GLsizei n, const GLuint *ids)"},
    {"isQueryEXT",
     (PyCFunction) PyCGLES2_glIsQueryEXT,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsQueryEXT (GLuint id)"},
    {"beginQueryEXT",
     (PyCFunction) PyCGLES2_glBeginQueryEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glBeginQueryEXT (GLenum target, GLuint id)"},
    {"endQueryEXT",
     (PyCFunction) PyCGLES2_glEndQueryEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glEndQueryEXT (GLenum target)"},
    {"queryCounterEXT",
     (PyCFunction) PyCGLES2_glQueryCounterEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glQueryCounterEXT (GLuint id, GLenum target)"},
    {"getQueryivEXT",
     (PyCFunction) PyCGLES2_glGetQueryivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetQueryivEXT (GLenum target, GLenum pname, GLint *params)"},
    {"getQueryObjectivEXT",
     (PyCFunction) PyCGLES2_glGetQueryObjectivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetQueryObjectivEXT (GLuint id, GLenum pname, GLint *params)"},
    {"getQueryObjectuivEXT",
     (PyCFunction) PyCGLES2_glGetQueryObjectuivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetQueryObjectuivEXT (GLuint id, GLenum pname, GLuint *params)"},
    {"getQueryObjecti64vEXT",
     (PyCFunction) PyCGLES2_glGetQueryObjecti64vEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 *params)"},
    {"getQueryObjectui64vEXT",
     (PyCFunction) PyCGLES2_glGetQueryObjectui64vEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 *params)"},
#endif /* GL_EXT_disjoint_timer_query */
#ifdef GL_EXT_draw_buffers
    {"drawBuffersEXT",
     (PyCFunction) PyCGLES2_glDrawBuffersEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawBuffersEXT (GLsizei n, const GLenum *bufs)"},
#endif /* GL_EXT_draw_buffers */
#ifdef GL_EXT_draw_buffers_indexed
    {"enableiEXT",
     (PyCFunction) PyCGLES2_glEnableiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glEnableiEXT (GLenum target, GLuint index)"},
    {"disableiEXT",
     (PyCFunction) PyCGLES2_glDisableiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDisableiEXT (GLenum target, GLuint index)"},
    {"blendEquationiEXT",
     (PyCFunction) PyCGLES2_glBlendEquationiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendEquationiEXT (GLuint buf, GLenum mode)"},
    {"blendEquationSeparateiEXT",
     (PyCFunction) PyCGLES2_glBlendEquationSeparateiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendEquationSeparateiEXT (GLuint buf, GLenum modeRGB, GLenum modeAlpha)"},
    {"blendFunciEXT",
     (PyCFunction) PyCGLES2_glBlendFunciEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendFunciEXT (GLuint buf, GLenum src, GLenum dst)"},
    {"blendFuncSeparateiEXT",
     (PyCFunction) PyCGLES2_glBlendFuncSeparateiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendFuncSeparateiEXT (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)"},
    {"colorMaskiEXT",
     (PyCFunction) PyCGLES2_glColorMaskiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glColorMaskiEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)"},
    {"isEnablediEXT",
     (PyCFunction) PyCGLES2_glIsEnablediEXT,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsEnablediEXT (GLenum target, GLuint index)"},
#endif /* GL_EXT_draw_buffers_indexed */
#ifdef GL_EXT_draw_elements_base_vertex
    {"drawElementsBaseVertexEXT",
     (PyCFunction) PyCGLES2_glDrawElementsBaseVertexEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsBaseVertexEXT (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex)"},
    {"drawRangeElementsBaseVertexEXT",
     (PyCFunction) PyCGLES2_glDrawRangeElementsBaseVertexEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawRangeElementsBaseVertexEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex)"},
    {"drawElementsInstancedBaseVertexEXT",
     (PyCFunction) PyCGLES2_glDrawElementsInstancedBaseVertexEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsInstancedBaseVertexEXT (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex)"},
    {"multiDrawElementsBaseVertexEXT",
     (PyCFunction) PyCGLES2_glMultiDrawElementsBaseVertexEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glMultiDrawElementsBaseVertexEXT (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex)"},
#endif /* GL_EXT_draw_elements_base_vertex */
#ifdef GL_EXT_draw_instanced
    {"drawArraysInstancedEXT",
     (PyCFunction) PyCGLES2_glDrawArraysInstancedEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount)"},
    {"drawElementsInstancedEXT",
     (PyCFunction) PyCGLES2_glDrawElementsInstancedEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)"},
#endif /* GL_EXT_draw_instanced */
#ifdef GL_EXT_geometry_point_size
#endif /* GL_EXT_geometry_point_size */
#ifdef GL_EXT_geometry_shader
    {"framebufferTextureEXT",
     (PyCFunction) PyCGLES2_glFramebufferTextureEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level)"},
#endif /* GL_EXT_geometry_shader */
#ifdef GL_EXT_gpu_shader5
#endif /* GL_EXT_gpu_shader5 */
#ifdef GL_EXT_instanced_arrays
    {"vertexAttribDivisorEXT",
     (PyCFunction) PyCGLES2_glVertexAttribDivisorEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribDivisorEXT (GLuint index, GLuint divisor)"},
#endif /* GL_EXT_instanced_arrays */
#ifdef GL_EXT_map_buffer_range
    {"mapBufferRangeEXT",
     (PyCFunction) PyCGLES2_glMapBufferRangeEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void *glMapBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)"},
    {"flushMappedBufferRangeEXT",
     (PyCFunction) PyCGLES2_glFlushMappedBufferRangeEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glFlushMappedBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length)"},
#endif /* GL_EXT_map_buffer_range */
#ifdef GL_EXT_multi_draw_arrays
    {"multiDrawArraysEXT",
     (PyCFunction) PyCGLES2_glMultiDrawArraysEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glMultiDrawArraysEXT (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)"},
    {"multiDrawElementsEXT",
     (PyCFunction) PyCGLES2_glMultiDrawElementsEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount)"},
#endif /* GL_EXT_multi_draw_arrays */
#ifdef GL_EXT_multi_draw_indirect
    {"multiDrawArraysIndirectEXT",
     (PyCFunction) PyCGLES2_glMultiDrawArraysIndirectEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glMultiDrawArraysIndirectEXT (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride)"},
    {"multiDrawElementsIndirectEXT",
     (PyCFunction) PyCGLES2_glMultiDrawElementsIndirectEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glMultiDrawElementsIndirectEXT (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride)"},
#endif /* GL_EXT_multi_draw_indirect */
#ifdef GL_EXT_multisampled_render_to_texture
    {"renderbufferStorageMultisampleEXT",
     (PyCFunction) PyCGLES2_glRenderbufferStorageMultisampleEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"},
    {"framebufferTexture2DMultisampleEXT",
     (PyCFunction) PyCGLES2_glFramebufferTexture2DMultisampleEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glFramebufferTexture2DMultisampleEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples)"},
#endif /* GL_EXT_multisampled_render_to_texture */
#ifdef GL_EXT_multiview_draw_buffers
    {"readBufferIndexedEXT",
     (PyCFunction) PyCGLES2_glReadBufferIndexedEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glReadBufferIndexedEXT (GLenum src, GLint index)"},
    {"drawBuffersIndexedEXT",
     (PyCFunction) PyCGLES2_glDrawBuffersIndexedEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawBuffersIndexedEXT (GLint n, const GLenum *location, const GLint *indices)"},
    {"getIntegeri_vEXT",
     (PyCFunction) PyCGLES2_glGetIntegeri_vEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetIntegeri_vEXT (GLenum target, GLuint index, GLint *data)"},
#endif /* GL_EXT_multiview_draw_buffers */
#ifdef GL_EXT_occlusion_query_boolean
#endif /* GL_EXT_occlusion_query_boolean */
#ifdef GL_EXT_primitive_bounding_box
    {"primitiveBoundingBoxEXT",
     (PyCFunction) PyCGLES2_glPrimitiveBoundingBoxEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glPrimitiveBoundingBoxEXT (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW)"},
#endif /* GL_EXT_primitive_bounding_box */
#ifdef GL_EXT_pvrtc_sRGB
#endif /* GL_EXT_pvrtc_sRGB */
#ifdef GL_EXT_read_format_bgra
#endif /* GL_EXT_read_format_bgra */
#ifdef GL_EXT_render_snorm
#endif /* GL_EXT_render_snorm */
#ifdef GL_EXT_robustness
    {"getGraphicsResetStatusEXT",
     (PyCFunction) PyCGLES2_glGetGraphicsResetStatusEXT,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glGetGraphicsResetStatusEXT ()"},
    {"readnPixelsEXT",
     (PyCFunction) PyCGLES2_glReadnPixelsEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glReadnPixelsEXT (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data)"},
    {"getnUniformfvEXT",
     (PyCFunction) PyCGLES2_glGetnUniformfvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetnUniformfvEXT (GLuint program, GLint location, GLsizei bufSize, GLfloat *params)"},
    {"getnUniformivEXT",
     (PyCFunction) PyCGLES2_glGetnUniformivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetnUniformivEXT (GLuint program, GLint location, GLsizei bufSize, GLint *params)"},
#endif /* GL_EXT_robustness */
#ifdef GL_EXT_sRGB
#endif /* GL_EXT_sRGB */
#ifdef GL_EXT_sRGB_write_control
#endif /* GL_EXT_sRGB_write_control */
#ifdef GL_EXT_separate_shader_objects
    {"activeShaderProgramEXT",
     (PyCFunction) PyCGLES2_glActiveShaderProgramEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glActiveShaderProgramEXT (GLuint pipeline, GLuint program)"},
    {"bindProgramPipelineEXT",
     (PyCFunction) PyCGLES2_glBindProgramPipelineEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glBindProgramPipelineEXT (GLuint pipeline)"},
    {"createShaderProgramvEXT",
     (PyCFunction) PyCGLES2_glCreateShaderProgramvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLchar **strings)"},
    {"deleteProgramPipelinesEXT",
     (PyCFunction) PyCGLES2_glDeleteProgramPipelinesEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteProgramPipelinesEXT (GLsizei n, const GLuint *pipelines)"},
    {"genProgramPipelinesEXT",
     (PyCFunction) PyCGLES2_glGenProgramPipelinesEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenProgramPipelinesEXT (GLsizei n, GLuint *pipelines)"},
    {"getProgramPipelineInfoLogEXT",
     (PyCFunction) PyCGLES2_glGetProgramPipelineInfoLogEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramPipelineInfoLogEXT (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)"},
    {"getProgramPipelineivEXT",
     (PyCFunction) PyCGLES2_glGetProgramPipelineivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramPipelineivEXT (GLuint pipeline, GLenum pname, GLint *params)"},
    {"isProgramPipelineEXT",
     (PyCFunction) PyCGLES2_glIsProgramPipelineEXT,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsProgramPipelineEXT (GLuint pipeline)"},
    {"programParameteriEXT",
     (PyCFunction) PyCGLES2_glProgramParameteriEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramParameteriEXT (GLuint program, GLenum pname, GLint value)"},
    {"programUniform1fEXT",
     (PyCFunction) PyCGLES2_glProgramUniform1fEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0)"},
    {"programUniform1fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniform1fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value)"},
    {"programUniform1iEXT",
     (PyCFunction) PyCGLES2_glProgramUniform1iEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1iEXT (GLuint program, GLint location, GLint v0)"},
    {"programUniform1ivEXT",
     (PyCFunction) PyCGLES2_glProgramUniform1ivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value)"},
    {"programUniform2fEXT",
     (PyCFunction) PyCGLES2_glProgramUniform2fEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1)"},
    {"programUniform2fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniform2fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value)"},
    {"programUniform2iEXT",
     (PyCFunction) PyCGLES2_glProgramUniform2iEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1)"},
    {"programUniform2ivEXT",
     (PyCFunction) PyCGLES2_glProgramUniform2ivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value)"},
    {"programUniform3fEXT",
     (PyCFunction) PyCGLES2_glProgramUniform3fEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)"},
    {"programUniform3fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniform3fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value)"},
    {"programUniform3iEXT",
     (PyCFunction) PyCGLES2_glProgramUniform3iEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2)"},
    {"programUniform3ivEXT",
     (PyCFunction) PyCGLES2_glProgramUniform3ivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value)"},
    {"programUniform4fEXT",
     (PyCFunction) PyCGLES2_glProgramUniform4fEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)"},
    {"programUniform4fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniform4fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value)"},
    {"programUniform4iEXT",
     (PyCFunction) PyCGLES2_glProgramUniform4iEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)"},
    {"programUniform4ivEXT",
     (PyCFunction) PyCGLES2_glProgramUniform4ivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value)"},
    {"programUniformMatrix2fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix2fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix3fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix3fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix4fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix4fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"useProgramStagesEXT",
     (PyCFunction) PyCGLES2_glUseProgramStagesEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glUseProgramStagesEXT (GLuint pipeline, GLbitfield stages, GLuint program)"},
    {"validateProgramPipelineEXT",
     (PyCFunction) PyCGLES2_glValidateProgramPipelineEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glValidateProgramPipelineEXT (GLuint pipeline)"},
    {"programUniform1uiEXT",
     (PyCFunction) PyCGLES2_glProgramUniform1uiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0)"},
    {"programUniform2uiEXT",
     (PyCFunction) PyCGLES2_glProgramUniform2uiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1)"},
    {"programUniform3uiEXT",
     (PyCFunction) PyCGLES2_glProgramUniform3uiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)"},
    {"programUniform4uiEXT",
     (PyCFunction) PyCGLES2_glProgramUniform4uiEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)"},
    {"programUniform1uivEXT",
     (PyCFunction) PyCGLES2_glProgramUniform1uivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value)"},
    {"programUniform2uivEXT",
     (PyCFunction) PyCGLES2_glProgramUniform2uivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value)"},
    {"programUniform3uivEXT",
     (PyCFunction) PyCGLES2_glProgramUniform3uivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value)"},
    {"programUniform4uivEXT",
     (PyCFunction) PyCGLES2_glProgramUniform4uivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value)"},
    {"programUniformMatrix2x3fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix2x3fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix3x2fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix3x2fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix2x4fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix2x4fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix4x2fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix4x2fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix3x4fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix3x4fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"programUniformMatrix4x3fvEXT",
     (PyCFunction) PyCGLES2_glProgramUniformMatrix4x3fvEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
#endif /* GL_EXT_separate_shader_objects */
#ifdef GL_EXT_shader_framebuffer_fetch
#endif /* GL_EXT_shader_framebuffer_fetch */
#ifdef GL_EXT_shader_implicit_conversions
#endif /* GL_EXT_shader_implicit_conversions */
#ifdef GL_EXT_shader_integer_mix
#endif /* GL_EXT_shader_integer_mix */
#ifdef GL_EXT_shader_io_blocks
#endif /* GL_EXT_shader_io_blocks */
#ifdef GL_EXT_shader_pixel_local_storage
#endif /* GL_EXT_shader_pixel_local_storage */
#ifdef GL_EXT_shader_texture_lod
#endif /* GL_EXT_shader_texture_lod */
#ifdef GL_EXT_shadow_samplers
#endif /* GL_EXT_shadow_samplers */
#ifdef GL_EXT_tessellation_point_size
#endif /* GL_EXT_tessellation_point_size */
#ifdef GL_EXT_tessellation_shader
    {"patchParameteriEXT",
     (PyCFunction) PyCGLES2_glPatchParameteriEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glPatchParameteriEXT (GLenum pname, GLint value)"},
#endif /* GL_EXT_tessellation_shader */
#ifdef GL_EXT_texture_border_clamp
    {"texParameterIivEXT",
     (PyCFunction) PyCGLES2_glTexParameterIivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params)"},
    {"texParameterIuivEXT",
     (PyCFunction) PyCGLES2_glTexParameterIuivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params)"},
    {"getTexParameterIivEXT",
     (PyCFunction) PyCGLES2_glGetTexParameterIivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params)"},
    {"getTexParameterIuivEXT",
     (PyCFunction) PyCGLES2_glGetTexParameterIuivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params)"},
    {"samplerParameterIivEXT",
     (PyCFunction) PyCGLES2_glSamplerParameterIivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glSamplerParameterIivEXT (GLuint sampler, GLenum pname, const GLint *param)"},
    {"samplerParameterIuivEXT",
     (PyCFunction) PyCGLES2_glSamplerParameterIuivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glSamplerParameterIuivEXT (GLuint sampler, GLenum pname, const GLuint *param)"},
    {"getSamplerParameterIivEXT",
     (PyCFunction) PyCGLES2_glGetSamplerParameterIivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetSamplerParameterIivEXT (GLuint sampler, GLenum pname, GLint *params)"},
    {"getSamplerParameterIuivEXT",
     (PyCFunction) PyCGLES2_glGetSamplerParameterIuivEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetSamplerParameterIuivEXT (GLuint sampler, GLenum pname, GLuint *params)"},
#endif /* GL_EXT_texture_border_clamp */
#ifdef GL_EXT_texture_buffer
    {"texBufferEXT",
     (PyCFunction) PyCGLES2_glTexBufferEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer)"},
    {"texBufferRangeEXT",
     (PyCFunction) PyCGLES2_glTexBufferRangeEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexBufferRangeEXT (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)"},
#endif /* GL_EXT_texture_buffer */
#ifdef GL_EXT_texture_compression_dxt1
#endif /* GL_EXT_texture_compression_dxt1 */
#ifdef GL_EXT_texture_compression_s3tc
#endif /* GL_EXT_texture_compression_s3tc */
#ifdef GL_EXT_texture_cube_map_array
#endif /* GL_EXT_texture_cube_map_array */
#ifdef GL_EXT_texture_filter_anisotropic
#endif /* GL_EXT_texture_filter_anisotropic */
#ifdef GL_EXT_texture_format_BGRA8888
#endif /* GL_EXT_texture_format_BGRA8888 */
#ifdef GL_EXT_texture_norm16
#endif /* GL_EXT_texture_norm16 */
#ifdef GL_EXT_texture_rg
#endif /* GL_EXT_texture_rg */
#ifdef GL_EXT_texture_sRGB_decode
#endif /* GL_EXT_texture_sRGB_decode */
#ifdef GL_EXT_texture_storage
    {"texStorage1DEXT",
     (PyCFunction) PyCGLES2_glTexStorage1DEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexStorage1DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)"},
    {"texStorage2DEXT",
     (PyCFunction) PyCGLES2_glTexStorage2DEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)"},
    {"texStorage3DEXT",
     (PyCFunction) PyCGLES2_glTexStorage3DEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTexStorage3DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)"},
    {"textureStorage1DEXT",
     (PyCFunction) PyCGLES2_glTextureStorage1DEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)"},
    {"textureStorage2DEXT",
     (PyCFunction) PyCGLES2_glTextureStorage2DEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)"},
    {"textureStorage3DEXT",
     (PyCFunction) PyCGLES2_glTextureStorage3DEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)"},
#endif /* GL_EXT_texture_storage */
#ifdef GL_EXT_texture_type_2_10_10_10_REV
#endif /* GL_EXT_texture_type_2_10_10_10_REV */
#ifdef GL_EXT_texture_view
    {"textureViewEXT",
     (PyCFunction) PyCGLES2_glTextureViewEXT,
     METH_VARARGS | METH_KEYWORDS,
     "void glTextureViewEXT (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers)"},
#endif /* GL_EXT_texture_view */
#ifdef GL_EXT_unpack_subimage
#endif /* GL_EXT_unpack_subimage */
#ifdef GL_FJ_shader_binary_GCCSO
#endif /* GL_FJ_shader_binary_GCCSO */
#ifdef GL_IMG_multisampled_render_to_texture
    {"renderbufferStorageMultisampleIMG",
     (PyCFunction) PyCGLES2_glRenderbufferStorageMultisampleIMG,
     METH_VARARGS | METH_KEYWORDS,
     "void glRenderbufferStorageMultisampleIMG (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"},
    {"framebufferTexture2DMultisampleIMG",
     (PyCFunction) PyCGLES2_glFramebufferTexture2DMultisampleIMG,
     METH_VARARGS | METH_KEYWORDS,
     "void glFramebufferTexture2DMultisampleIMG (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples)"},
#endif /* GL_IMG_multisampled_render_to_texture */
#ifdef GL_IMG_program_binary
#endif /* GL_IMG_program_binary */
#ifdef GL_IMG_read_format
#endif /* GL_IMG_read_format */
#ifdef GL_IMG_shader_binary
#endif /* GL_IMG_shader_binary */
#ifdef GL_IMG_texture_compression_pvrtc
#endif /* GL_IMG_texture_compression_pvrtc */
#ifdef GL_IMG_texture_compression_pvrtc2
#endif /* GL_IMG_texture_compression_pvrtc2 */
#ifdef GL_INTEL_performance_query
    {"beginPerfQueryINTEL",
     (PyCFunction) PyCGLES2_glBeginPerfQueryINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glBeginPerfQueryINTEL (GLuint queryHandle)"},
    {"createPerfQueryINTEL",
     (PyCFunction) PyCGLES2_glCreatePerfQueryINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glCreatePerfQueryINTEL (GLuint queryId, GLuint *queryHandle)"},
    {"deletePerfQueryINTEL",
     (PyCFunction) PyCGLES2_glDeletePerfQueryINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeletePerfQueryINTEL (GLuint queryHandle)"},
    {"endPerfQueryINTEL",
     (PyCFunction) PyCGLES2_glEndPerfQueryINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glEndPerfQueryINTEL (GLuint queryHandle)"},
    {"getFirstPerfQueryIdINTEL",
     (PyCFunction) PyCGLES2_glGetFirstPerfQueryIdINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetFirstPerfQueryIdINTEL (GLuint *queryId)"},
    {"getNextPerfQueryIdINTEL",
     (PyCFunction) PyCGLES2_glGetNextPerfQueryIdINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetNextPerfQueryIdINTEL (GLuint queryId, GLuint *nextQueryId)"},
    {"getPerfCounterInfoINTEL",
     (PyCFunction) PyCGLES2_glGetPerfCounterInfoINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfCounterInfoINTEL (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue)"},
    {"getPerfQueryDataINTEL",
     (PyCFunction) PyCGLES2_glGetPerfQueryDataINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfQueryDataINTEL (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten)"},
    {"getPerfQueryIdByNameINTEL",
     (PyCFunction) PyCGLES2_glGetPerfQueryIdByNameINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfQueryIdByNameINTEL (GLchar *queryName, GLuint *queryId)"},
    {"getPerfQueryInfoINTEL",
     (PyCFunction) PyCGLES2_glGetPerfQueryInfoINTEL,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask)"},
#endif /* GL_INTEL_performance_query */
#ifdef GL_NV_bindless_texture
    {"getTextureHandleNV",
     (PyCFunction) PyCGLES2_glGetTextureHandleNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint64 glGetTextureHandleNV (GLuint texture)"},
    {"getTextureSamplerHandleNV",
     (PyCFunction) PyCGLES2_glGetTextureSamplerHandleNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint64 glGetTextureSamplerHandleNV (GLuint texture, GLuint sampler)"},
    {"makeTextureHandleResidentNV",
     (PyCFunction) PyCGLES2_glMakeTextureHandleResidentNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMakeTextureHandleResidentNV (GLuint64 handle)"},
    {"makeTextureHandleNonResidentNV",
     (PyCFunction) PyCGLES2_glMakeTextureHandleNonResidentNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMakeTextureHandleNonResidentNV (GLuint64 handle)"},
    {"getImageHandleNV",
     (PyCFunction) PyCGLES2_glGetImageHandleNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint64 glGetImageHandleNV (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format)"},
    {"makeImageHandleResidentNV",
     (PyCFunction) PyCGLES2_glMakeImageHandleResidentNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMakeImageHandleResidentNV (GLuint64 handle, GLenum access)"},
    {"makeImageHandleNonResidentNV",
     (PyCFunction) PyCGLES2_glMakeImageHandleNonResidentNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMakeImageHandleNonResidentNV (GLuint64 handle)"},
    {"uniformHandleui64NV",
     (PyCFunction) PyCGLES2_glUniformHandleui64NV,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformHandleui64NV (GLint location, GLuint64 value)"},
    {"uniformHandleui64vNV",
     (PyCFunction) PyCGLES2_glUniformHandleui64vNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformHandleui64vNV (GLint location, GLsizei count, const GLuint64 *value)"},
    {"programUniformHandleui64NV",
     (PyCFunction) PyCGLES2_glProgramUniformHandleui64NV,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformHandleui64NV (GLuint program, GLint location, GLuint64 value)"},
    {"programUniformHandleui64vNV",
     (PyCFunction) PyCGLES2_glProgramUniformHandleui64vNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramUniformHandleui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64 *values)"},
    {"isTextureHandleResidentNV",
     (PyCFunction) PyCGLES2_glIsTextureHandleResidentNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsTextureHandleResidentNV (GLuint64 handle)"},
    {"isImageHandleResidentNV",
     (PyCFunction) PyCGLES2_glIsImageHandleResidentNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsImageHandleResidentNV (GLuint64 handle)"},
#endif /* GL_NV_bindless_texture */
#ifdef GL_NV_blend_equation_advanced
    {"blendParameteriNV",
     (PyCFunction) PyCGLES2_glBlendParameteriNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendParameteriNV (GLenum pname, GLint value)"},
    {"blendBarrierNV",
     (PyCFunction) PyCGLES2_glBlendBarrierNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlendBarrierNV ()"},
#endif /* GL_NV_blend_equation_advanced */
#ifdef GL_NV_blend_equation_advanced_coherent
#endif /* GL_NV_blend_equation_advanced_coherent */
#ifdef GL_NV_conditional_render
    {"beginConditionalRenderNV",
     (PyCFunction) PyCGLES2_glBeginConditionalRenderNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glBeginConditionalRenderNV (GLuint id, GLenum mode)"},
    {"endConditionalRenderNV",
     (PyCFunction) PyCGLES2_glEndConditionalRenderNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glEndConditionalRenderNV ()"},
#endif /* GL_NV_conditional_render */
#ifdef GL_NV_copy_buffer
    {"copyBufferSubDataNV",
     (PyCFunction) PyCGLES2_glCopyBufferSubDataNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyBufferSubDataNV (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)"},
#endif /* GL_NV_copy_buffer */
#ifdef GL_NV_coverage_sample
    {"coverageMaskNV",
     (PyCFunction) PyCGLES2_glCoverageMaskNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glCoverageMaskNV (GLboolean mask)"},
    {"coverageOperationNV",
     (PyCFunction) PyCGLES2_glCoverageOperationNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glCoverageOperationNV (GLenum operation)"},
#endif /* GL_NV_coverage_sample */
#ifdef GL_NV_depth_nonlinear
#endif /* GL_NV_depth_nonlinear */
#ifdef GL_NV_draw_buffers
    {"drawBuffersNV",
     (PyCFunction) PyCGLES2_glDrawBuffersNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawBuffersNV (GLsizei n, const GLenum *bufs)"},
#endif /* GL_NV_draw_buffers */
#ifdef GL_NV_draw_instanced
    {"drawArraysInstancedNV",
     (PyCFunction) PyCGLES2_glDrawArraysInstancedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawArraysInstancedNV (GLenum mode, GLint first, GLsizei count, GLsizei primcount)"},
    {"drawElementsInstancedNV",
     (PyCFunction) PyCGLES2_glDrawElementsInstancedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glDrawElementsInstancedNV (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)"},
#endif /* GL_NV_draw_instanced */
#ifdef GL_NV_explicit_attrib_location
#endif /* GL_NV_explicit_attrib_location */
#ifdef GL_NV_fbo_color_attachments
#endif /* GL_NV_fbo_color_attachments */
#ifdef GL_NV_fence
    {"deleteFencesNV",
     (PyCFunction) PyCGLES2_glDeleteFencesNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeleteFencesNV (GLsizei n, const GLuint *fences)"},
    {"genFencesNV",
     (PyCFunction) PyCGLES2_glGenFencesNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGenFencesNV (GLsizei n, GLuint *fences)"},
    {"isFenceNV",
     (PyCFunction) PyCGLES2_glIsFenceNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsFenceNV (GLuint fence)"},
    {"testFenceNV",
     (PyCFunction) PyCGLES2_glTestFenceNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glTestFenceNV (GLuint fence)"},
    {"getFenceivNV",
     (PyCFunction) PyCGLES2_glGetFenceivNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetFenceivNV (GLuint fence, GLenum pname, GLint *params)"},
    {"finishFenceNV",
     (PyCFunction) PyCGLES2_glFinishFenceNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glFinishFenceNV (GLuint fence)"},
    {"setFenceNV",
     (PyCFunction) PyCGLES2_glSetFenceNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glSetFenceNV (GLuint fence, GLenum condition)"},
#endif /* GL_NV_fence */
#ifdef GL_NV_framebuffer_blit
    {"blitFramebufferNV",
     (PyCFunction) PyCGLES2_glBlitFramebufferNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glBlitFramebufferNV (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)"},
#endif /* GL_NV_framebuffer_blit */
#ifdef GL_NV_framebuffer_multisample
    {"renderbufferStorageMultisampleNV",
     (PyCFunction) PyCGLES2_glRenderbufferStorageMultisampleNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glRenderbufferStorageMultisampleNV (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"},
#endif /* GL_NV_framebuffer_multisample */
#ifdef GL_NV_generate_mipmap_sRGB
#endif /* GL_NV_generate_mipmap_sRGB */
#ifdef GL_NV_image_formats
#endif /* GL_NV_image_formats */
#ifdef GL_NV_instanced_arrays
    {"vertexAttribDivisorNV",
     (PyCFunction) PyCGLES2_glVertexAttribDivisorNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glVertexAttribDivisorNV (GLuint index, GLuint divisor)"},
#endif /* GL_NV_instanced_arrays */
#ifdef GL_NV_internalformat_sample_query
    {"getInternalformatSampleivNV",
     (PyCFunction) PyCGLES2_glGetInternalformatSampleivNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params)"},
#endif /* GL_NV_internalformat_sample_query */
#ifdef GL_NV_non_square_matrices
    {"uniformMatrix2x3fvNV",
     (PyCFunction) PyCGLES2_glUniformMatrix2x3fvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix2x3fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix3x2fvNV",
     (PyCFunction) PyCGLES2_glUniformMatrix3x2fvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix3x2fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix2x4fvNV",
     (PyCFunction) PyCGLES2_glUniformMatrix2x4fvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix2x4fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix4x2fvNV",
     (PyCFunction) PyCGLES2_glUniformMatrix4x2fvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix4x2fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix3x4fvNV",
     (PyCFunction) PyCGLES2_glUniformMatrix3x4fvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix3x4fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
    {"uniformMatrix4x3fvNV",
     (PyCFunction) PyCGLES2_glUniformMatrix4x3fvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glUniformMatrix4x3fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"},
#endif /* GL_NV_non_square_matrices */
#ifdef GL_NV_path_rendering
    {"genPathsNV",
     (PyCFunction) PyCGLES2_glGenPathsNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLuint glGenPathsNV (GLsizei range)"},
    {"deletePathsNV",
     (PyCFunction) PyCGLES2_glDeletePathsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glDeletePathsNV (GLuint path, GLsizei range)"},
    {"isPathNV",
     (PyCFunction) PyCGLES2_glIsPathNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsPathNV (GLuint path)"},
    {"pathCommandsNV",
     (PyCFunction) PyCGLES2_glPathCommandsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathCommandsNV (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords)"},
    {"pathCoordsNV",
     (PyCFunction) PyCGLES2_glPathCoordsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathCoordsNV (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords)"},
    {"pathSubCommandsNV",
     (PyCFunction) PyCGLES2_glPathSubCommandsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathSubCommandsNV (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords)"},
    {"pathSubCoordsNV",
     (PyCFunction) PyCGLES2_glPathSubCoordsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathSubCoordsNV (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords)"},
    {"pathStringNV",
     (PyCFunction) PyCGLES2_glPathStringNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathStringNV (GLuint path, GLenum format, GLsizei length, const void *pathString)"},
    {"pathGlyphsNV",
     (PyCFunction) PyCGLES2_glPathGlyphsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathGlyphsNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)"},
    {"pathGlyphRangeNV",
     (PyCFunction) PyCGLES2_glPathGlyphRangeNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathGlyphRangeNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)"},
    {"weightPathsNV",
     (PyCFunction) PyCGLES2_glWeightPathsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glWeightPathsNV (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights)"},
    {"copyPathNV",
     (PyCFunction) PyCGLES2_glCopyPathNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glCopyPathNV (GLuint resultPath, GLuint srcPath)"},
    {"interpolatePathsNV",
     (PyCFunction) PyCGLES2_glInterpolatePathsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glInterpolatePathsNV (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight)"},
    {"transformPathNV",
     (PyCFunction) PyCGLES2_glTransformPathNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glTransformPathNV (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues)"},
    {"pathParameterivNV",
     (PyCFunction) PyCGLES2_glPathParameterivNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathParameterivNV (GLuint path, GLenum pname, const GLint *value)"},
    {"pathParameteriNV",
     (PyCFunction) PyCGLES2_glPathParameteriNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathParameteriNV (GLuint path, GLenum pname, GLint value)"},
    {"pathParameterfvNV",
     (PyCFunction) PyCGLES2_glPathParameterfvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathParameterfvNV (GLuint path, GLenum pname, const GLfloat *value)"},
    {"pathParameterfNV",
     (PyCFunction) PyCGLES2_glPathParameterfNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathParameterfNV (GLuint path, GLenum pname, GLfloat value)"},
    {"pathDashArrayNV",
     (PyCFunction) PyCGLES2_glPathDashArrayNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathDashArrayNV (GLuint path, GLsizei dashCount, const GLfloat *dashArray)"},
    {"pathStencilFuncNV",
     (PyCFunction) PyCGLES2_glPathStencilFuncNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathStencilFuncNV (GLenum func, GLint ref, GLuint mask)"},
    {"pathStencilDepthOffsetNV",
     (PyCFunction) PyCGLES2_glPathStencilDepthOffsetNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathStencilDepthOffsetNV (GLfloat factor, GLfloat units)"},
    {"stencilFillPathNV",
     (PyCFunction) PyCGLES2_glStencilFillPathNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilFillPathNV (GLuint path, GLenum fillMode, GLuint mask)"},
    {"stencilStrokePathNV",
     (PyCFunction) PyCGLES2_glStencilStrokePathNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilStrokePathNV (GLuint path, GLint reference, GLuint mask)"},
    {"stencilFillPathInstancedNV",
     (PyCFunction) PyCGLES2_glStencilFillPathInstancedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues)"},
    {"stencilStrokePathInstancedNV",
     (PyCFunction) PyCGLES2_glStencilStrokePathInstancedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues)"},
    {"pathCoverDepthFuncNV",
     (PyCFunction) PyCGLES2_glPathCoverDepthFuncNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glPathCoverDepthFuncNV (GLenum func)"},
    {"coverFillPathNV",
     (PyCFunction) PyCGLES2_glCoverFillPathNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glCoverFillPathNV (GLuint path, GLenum coverMode)"},
    {"coverStrokePathNV",
     (PyCFunction) PyCGLES2_glCoverStrokePathNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glCoverStrokePathNV (GLuint path, GLenum coverMode)"},
    {"coverFillPathInstancedNV",
     (PyCFunction) PyCGLES2_glCoverFillPathInstancedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)"},
    {"coverStrokePathInstancedNV",
     (PyCFunction) PyCGLES2_glCoverStrokePathInstancedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)"},
    {"getPathParameterivNV",
     (PyCFunction) PyCGLES2_glGetPathParameterivNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPathParameterivNV (GLuint path, GLenum pname, GLint *value)"},
    {"getPathParameterfvNV",
     (PyCFunction) PyCGLES2_glGetPathParameterfvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPathParameterfvNV (GLuint path, GLenum pname, GLfloat *value)"},
    {"getPathCommandsNV",
     (PyCFunction) PyCGLES2_glGetPathCommandsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPathCommandsNV (GLuint path, GLubyte *commands)"},
    {"getPathCoordsNV",
     (PyCFunction) PyCGLES2_glGetPathCoordsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPathCoordsNV (GLuint path, GLfloat *coords)"},
    {"getPathDashArrayNV",
     (PyCFunction) PyCGLES2_glGetPathDashArrayNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPathDashArrayNV (GLuint path, GLfloat *dashArray)"},
    {"getPathMetricsNV",
     (PyCFunction) PyCGLES2_glGetPathMetricsNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPathMetricsNV (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics)"},
    {"getPathMetricRangeNV",
     (PyCFunction) PyCGLES2_glGetPathMetricRangeNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPathMetricRangeNV (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics)"},
    {"getPathSpacingNV",
     (PyCFunction) PyCGLES2_glGetPathSpacingNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetPathSpacingNV (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing)"},
    {"isPointInFillPathNV",
     (PyCFunction) PyCGLES2_glIsPointInFillPathNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsPointInFillPathNV (GLuint path, GLuint mask, GLfloat x, GLfloat y)"},
    {"isPointInStrokePathNV",
     (PyCFunction) PyCGLES2_glIsPointInStrokePathNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsPointInStrokePathNV (GLuint path, GLfloat x, GLfloat y)"},
    {"getPathLengthNV",
     (PyCFunction) PyCGLES2_glGetPathLengthNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLfloat glGetPathLengthNV (GLuint path, GLsizei startSegment, GLsizei numSegments)"},
    {"pointAlongPathNV",
     (PyCFunction) PyCGLES2_glPointAlongPathNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glPointAlongPathNV (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY)"},
    {"matrixLoad3x2fNV",
     (PyCFunction) PyCGLES2_glMatrixLoad3x2fNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMatrixLoad3x2fNV (GLenum matrixMode, const GLfloat *m)"},
    {"matrixLoad3x3fNV",
     (PyCFunction) PyCGLES2_glMatrixLoad3x3fNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMatrixLoad3x3fNV (GLenum matrixMode, const GLfloat *m)"},
    {"matrixLoadTranspose3x3fNV",
     (PyCFunction) PyCGLES2_glMatrixLoadTranspose3x3fNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMatrixLoadTranspose3x3fNV (GLenum matrixMode, const GLfloat *m)"},
    {"matrixMult3x2fNV",
     (PyCFunction) PyCGLES2_glMatrixMult3x2fNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMatrixMult3x2fNV (GLenum matrixMode, const GLfloat *m)"},
    {"matrixMult3x3fNV",
     (PyCFunction) PyCGLES2_glMatrixMult3x3fNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMatrixMult3x3fNV (GLenum matrixMode, const GLfloat *m)"},
    {"matrixMultTranspose3x3fNV",
     (PyCFunction) PyCGLES2_glMatrixMultTranspose3x3fNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glMatrixMultTranspose3x3fNV (GLenum matrixMode, const GLfloat *m)"},
    {"stencilThenCoverFillPathNV",
     (PyCFunction) PyCGLES2_glStencilThenCoverFillPathNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilThenCoverFillPathNV (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode)"},
    {"stencilThenCoverStrokePathNV",
     (PyCFunction) PyCGLES2_glStencilThenCoverStrokePathNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilThenCoverStrokePathNV (GLuint path, GLint reference, GLuint mask, GLenum coverMode)"},
    {"stencilThenCoverFillPathInstancedNV",
     (PyCFunction) PyCGLES2_glStencilThenCoverFillPathInstancedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilThenCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)"},
    {"stencilThenCoverStrokePathInstancedNV",
     (PyCFunction) PyCGLES2_glStencilThenCoverStrokePathInstancedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glStencilThenCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)"},
    {"pathGlyphIndexRangeNV",
     (PyCFunction) PyCGLES2_glPathGlyphIndexRangeNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2])"},
    {"pathGlyphIndexArrayNV",
     (PyCFunction) PyCGLES2_glPathGlyphIndexArrayNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glPathGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale)"},
    {"pathMemoryGlyphIndexArrayNV",
     (PyCFunction) PyCGLES2_glPathMemoryGlyphIndexArrayNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLenum glPathMemoryGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale)"},
    {"programPathFragmentInputGenNV",
     (PyCFunction) PyCGLES2_glProgramPathFragmentInputGenNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glProgramPathFragmentInputGenNV (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs)"},
    {"getProgramResourcefvNV",
     (PyCFunction) PyCGLES2_glGetProgramResourcefvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params)"},
#endif /* GL_NV_path_rendering */
#ifdef GL_NV_read_buffer
    {"readBufferNV",
     (PyCFunction) PyCGLES2_glReadBufferNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glReadBufferNV (GLenum mode)"},
#endif /* GL_NV_read_buffer */
#ifdef GL_NV_read_buffer_front
#endif /* GL_NV_read_buffer_front */
#ifdef GL_NV_read_depth
#endif /* GL_NV_read_depth */
#ifdef GL_NV_read_depth_stencil
#endif /* GL_NV_read_depth_stencil */
#ifdef GL_NV_read_stencil
#endif /* GL_NV_read_stencil */
#ifdef GL_NV_sRGB_formats
#endif /* GL_NV_sRGB_formats */
#ifdef GL_NV_shader_noperspective_interpolation
#endif /* GL_NV_shader_noperspective_interpolation */
#ifdef GL_NV_shadow_samplers_array
#endif /* GL_NV_shadow_samplers_array */
#ifdef GL_NV_shadow_samplers_cube
#endif /* GL_NV_shadow_samplers_cube */
#ifdef GL_NV_texture_border_clamp
#endif /* GL_NV_texture_border_clamp */
#ifdef GL_NV_texture_compression_s3tc_update
#endif /* GL_NV_texture_compression_s3tc_update */
#ifdef GL_NV_texture_npot_2D_mipmap
#endif /* GL_NV_texture_npot_2D_mipmap */
#ifdef GL_NV_viewport_array
    {"viewportArrayvNV",
     (PyCFunction) PyCGLES2_glViewportArrayvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glViewportArrayvNV (GLuint first, GLsizei count, const GLfloat *v)"},
    {"viewportIndexedfNV",
     (PyCFunction) PyCGLES2_glViewportIndexedfNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glViewportIndexedfNV (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)"},
    {"viewportIndexedfvNV",
     (PyCFunction) PyCGLES2_glViewportIndexedfvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glViewportIndexedfvNV (GLuint index, const GLfloat *v)"},
    {"scissorArrayvNV",
     (PyCFunction) PyCGLES2_glScissorArrayvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glScissorArrayvNV (GLuint first, GLsizei count, const GLint *v)"},
    {"scissorIndexedNV",
     (PyCFunction) PyCGLES2_glScissorIndexedNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glScissorIndexedNV (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height)"},
    {"scissorIndexedvNV",
     (PyCFunction) PyCGLES2_glScissorIndexedvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glScissorIndexedvNV (GLuint index, const GLint *v)"},
    {"depthRangeArrayfvNV",
     (PyCFunction) PyCGLES2_glDepthRangeArrayfvNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glDepthRangeArrayfvNV (GLuint first, GLsizei count, const GLfloat *v)"},
    {"depthRangeIndexedfNV",
     (PyCFunction) PyCGLES2_glDepthRangeIndexedfNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glDepthRangeIndexedfNV (GLuint index, GLfloat n, GLfloat f)"},
    {"getFloati_vNV",
     (PyCFunction) PyCGLES2_glGetFloati_vNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetFloati_vNV (GLenum target, GLuint index, GLfloat *data)"},
    {"enableiNV",
     (PyCFunction) PyCGLES2_glEnableiNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glEnableiNV (GLenum target, GLuint index)"},
    {"disableiNV",
     (PyCFunction) PyCGLES2_glDisableiNV,
     METH_VARARGS | METH_KEYWORDS,
     "void glDisableiNV (GLenum target, GLuint index)"},
    {"isEnablediNV",
     (PyCFunction) PyCGLES2_glIsEnablediNV,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glIsEnablediNV (GLenum target, GLuint index)"},
#endif /* GL_NV_viewport_array */
#ifdef GL_QCOM_alpha_test
    {"alphaFuncQCOM",
     (PyCFunction) PyCGLES2_glAlphaFuncQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glAlphaFuncQCOM (GLenum func, GLclampf ref)"},
#endif /* GL_QCOM_alpha_test */
#ifdef GL_QCOM_binning_control
#endif /* GL_QCOM_binning_control */
#ifdef GL_QCOM_driver_control
    {"getDriverControlsQCOM",
     (PyCFunction) PyCGLES2_glGetDriverControlsQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetDriverControlsQCOM (GLint *num, GLsizei size, GLuint *driverControls)"},
    {"getDriverControlStringQCOM",
     (PyCFunction) PyCGLES2_glGetDriverControlStringQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glGetDriverControlStringQCOM (GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString)"},
    {"enableDriverControlQCOM",
     (PyCFunction) PyCGLES2_glEnableDriverControlQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glEnableDriverControlQCOM (GLuint driverControl)"},
    {"disableDriverControlQCOM",
     (PyCFunction) PyCGLES2_glDisableDriverControlQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glDisableDriverControlQCOM (GLuint driverControl)"},
#endif /* GL_QCOM_driver_control */
#ifdef GL_QCOM_extended_get
    {"extGetTexturesQCOM",
     (PyCFunction) PyCGLES2_glExtGetTexturesQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetTexturesQCOM (GLuint *textures, GLint maxTextures, GLint *numTextures)"},
    {"extGetBuffersQCOM",
     (PyCFunction) PyCGLES2_glExtGetBuffersQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetBuffersQCOM (GLuint *buffers, GLint maxBuffers, GLint *numBuffers)"},
    {"extGetRenderbuffersQCOM",
     (PyCFunction) PyCGLES2_glExtGetRenderbuffersQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetRenderbuffersQCOM (GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers)"},
    {"extGetFramebuffersQCOM",
     (PyCFunction) PyCGLES2_glExtGetFramebuffersQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetFramebuffersQCOM (GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers)"},
    {"extGetTexLevelParameterivQCOM",
     (PyCFunction) PyCGLES2_glExtGetTexLevelParameterivQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetTexLevelParameterivQCOM (GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params)"},
    {"extTexObjectStateOverrideiQCOM",
     (PyCFunction) PyCGLES2_glExtTexObjectStateOverrideiQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtTexObjectStateOverrideiQCOM (GLenum target, GLenum pname, GLint param)"},
    {"extGetTexSubImageQCOM",
     (PyCFunction) PyCGLES2_glExtGetTexSubImageQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetTexSubImageQCOM (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels)"},
    {"extGetBufferPointervQCOM",
     (PyCFunction) PyCGLES2_glExtGetBufferPointervQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetBufferPointervQCOM (GLenum target, void **params)"},
#endif /* GL_QCOM_extended_get */
#ifdef GL_QCOM_extended_get2
    {"extGetShadersQCOM",
     (PyCFunction) PyCGLES2_glExtGetShadersQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetShadersQCOM (GLuint *shaders, GLint maxShaders, GLint *numShaders)"},
    {"extGetProgramsQCOM",
     (PyCFunction) PyCGLES2_glExtGetProgramsQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetProgramsQCOM (GLuint *programs, GLint maxPrograms, GLint *numPrograms)"},
    {"extIsProgramBinaryQCOM",
     (PyCFunction) PyCGLES2_glExtIsProgramBinaryQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "GLboolean glExtIsProgramBinaryQCOM (GLuint program)"},
    {"extGetProgramBinarySourceQCOM",
     (PyCFunction) PyCGLES2_glExtGetProgramBinarySourceQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glExtGetProgramBinarySourceQCOM (GLuint program, GLenum shadertype, GLchar *source, GLint *length)"},
#endif /* GL_QCOM_extended_get2 */
#ifdef GL_QCOM_perfmon_global_mode
#endif /* GL_QCOM_perfmon_global_mode */
#ifdef GL_QCOM_tiled_rendering
    {"startTilingQCOM",
     (PyCFunction) PyCGLES2_glStartTilingQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glStartTilingQCOM (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask)"},
    {"endTilingQCOM",
     (PyCFunction) PyCGLES2_glEndTilingQCOM,
     METH_VARARGS | METH_KEYWORDS,
     "void glEndTilingQCOM (GLbitfield preserveMask)"},
#endif /* GL_QCOM_tiled_rendering */
#ifdef GL_QCOM_writeonly_rendering
#endif /* GL_QCOM_writeonly_rendering */
#ifdef GL_VIV_shader_binary
#endif /* GL_VIV_shader_binary */
    {NULL}
};
#endif /* _PYCGLES2_CTXMETHODS_H_ */
